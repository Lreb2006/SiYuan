{"ID":"20250203182209-ln2y7so","Spec":"1","Type":"NodeDocument","Properties":{"custom-sy-readonly":"false","icon":"1f9e0","id":"20250203182209-ln2y7so","title":"蓝桥杯","type":"doc","updated":"20250322135821"},"Children":[{"ID":"20250203182209-zh6rp98","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250203182209-zh6rp98","updated":"20250206215226"},"Children":[{"Type":"NodeText","Data":"算法学习笔记第一版"}]},{"ID":"20250203182209-3i6byts","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-3i6byts","updated":"20250206215226"},"Children":[{"Type":"NodeText","Data":"占位符"}]},{"ID":"20250203182209-zg1zzah","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"width: 65px;||","id":"20250203182209-zg1zzah","updated":"20250206215226"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"占位符"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"对应数据类型"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"描述"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%d"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"有符号十进制整数"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%u"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsigned int"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"无符号十进制整数"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%f"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"double"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"浮点数"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%e"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"double"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"科学记数法表示的浮点数"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%g"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"double"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"根据数值自动选择"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%f"},{"Type":"NodeText","Data":"​或"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%e"},{"Type":"NodeText","Data":"​中的较短者"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%c"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"char"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"字符"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%s"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"char *"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"字符串"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%p"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"指针类型"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"指针地址"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%x"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsigned int"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"无符号十六进制整数"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%o"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsigned int"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"八进制整数"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%lu"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsigned long int"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"无符号长整型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%ld"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"long int"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"长整型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%%"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"无"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"打印百分号本身"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%lf"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"double"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"双精度浮点数。主要用于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"printf"},{"Type":"NodeText","Data":"​ 系列函数输出 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"double"},{"Type":"NodeText","Data":"​ 类型数据，与"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%f"},{"Type":"NodeText","Data":"​功能相同；在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"scanf"},{"Type":"NodeText","Data":"​ 系列函数中用于读取 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"double"},{"Type":"NodeText","Data":"​ 类型的数据"}]}]}]},{"ID":"20250203182209-momh0z6","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-momh0z6","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"变量类型"}]},{"ID":"20250203182209-mu614jh","Type":"NodeTable","TableAligns":[0,0,0,0],"Properties":{"colgroup":"|width: 188px;||","id":"20250203182209-mu614jh","updated":"20250203182209"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"数据类型"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"字节长度（64位系统）"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"取值范围"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"类型描述"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"char"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"-128 到 127 或 0 到 255 (无符号)"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"字符数据类型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsigned char"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"1"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0 到 255"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"无符号字符数据类型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"short"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"2"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"-32,768 到 32,767"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"短整型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsigned short"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"2"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0 到 65,535"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"无符号短整型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"4"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"-2,147,483,648 到 2,147,483,647"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"整型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsigned int"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"4"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0 到 4,294,967,295"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"无符号整型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"long"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"8"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"长整型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsigned long"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"8"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0 到 18,446,744,073,709,551,615"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"无符号长整型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"long long"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"8"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"超长整型（也称为64位整数）"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unsigned long long"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"8"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0 到 18,446,744,073,709,551,615"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"无符号超长整型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"4"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"大约±1.175494e-38 至 ±3.402823e+38"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"单精度浮点数"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"double"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"8"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"大约±2.225074e-308 至 ±1.797693e+308"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"双精度浮点数"}]}]}]},{"ID":"20250203182209-76fyxwv","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-76fyxwv","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"格式化输出"}]},{"ID":"20250203182209-79wh5up","Type":"NodeTable","Data":"| 格式说明符 | 示例       | 描述                                                                                   |\n|------------|------------|----------------------------------------------------------------------------------------|\n| 宽度       | `%5d`      | 指定最小字符数，如果数值短于这个宽度，则会根据对齐方式填充空格。                       |\n| 精度       | `%.2f`     | 对于浮点数，指定了小数点后的位数；对于字符串，限制了显示的最大字符数。                 |\n| 左对齐标志 | `%-5d`     | 使用`-`标志实现左对齐，默认是右对齐。                                                 |\n| 正号标志   | `%+d`      | 使用`+`强制输出符号（正或负），即使是正数也会显示加号。                                 |\n| 空格标志   | `% d`      | 若无符号，则在正数前加一个空格。                                                       |\n| 前缀标志   | `%#x`      | 对于`o`、`x`或`X`，会在非零值前加上相应的前缀（`0`、`0x`或`0X`）。对于`f`类型，保证总是包含小数点。 |\n| 零填充     | `%05d`     | 当指定宽度时，用零而非空格填充（仅适用于数值类型）。                                     |\n| 长度修饰符 | `%ld`      | 如`l`（长）、`ll`（长长）、`h`（短）、`hh`（字符）等，用于修改数据类型的大小。         |","TableAligns":[0,0,0],"Properties":{"id":"20250203182209-79wh5up","updated":"20250203182209"},"Children":[{"Type":"NodeTableHead","Children":[{"Type":"NodeTableRow","Children":[{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"格式说明符"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"示例"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"描述"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Children":[{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"宽度"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%5d"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"指定最小字符数，如果数值短于这个宽度，则会根据对齐方式填充空格。"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Children":[{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"精度"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%.2f"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"对于浮点数，指定了小数点后的位数；对于字符串，限制了显示的最大字符数。"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Children":[{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"左对齐标志"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%-5d"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"-"},{"Type":"NodeText","Data":"标志实现左对齐，默认是右对齐。"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Children":[{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"正号标志"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%+d"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"+"},{"Type":"NodeText","Data":"强制输出符号（正或负），即使是正数也会显示加号。"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Children":[{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"空格标志"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"% d"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"若无符号，则在正数前加一个空格。"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Children":[{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"前缀标志"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%#x"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"对于"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"o"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"x"},{"Type":"NodeText","Data":"或"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"X"},{"Type":"NodeText","Data":"，会在非零值前加上相应的前缀（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"0x"},{"Type":"NodeText","Data":"或"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"0X"},{"Type":"NodeText","Data":"）。对于"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"f"},{"Type":"NodeText","Data":"类型，保证总是包含小数点。"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Children":[{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"零填充"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%05d"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"当指定宽度时，用零而非空格填充（仅适用于数值类型）。"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Children":[{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"长度修饰符"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"%ld"}]},{"Type":"NodeTableCell","Children":[{"Type":"NodeText","Data":"如"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"l"},{"Type":"NodeText","Data":"（长）、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ll"},{"Type":"NodeText","Data":"（长长）、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"h"},{"Type":"NodeText","Data":"（短）、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"hh"},{"Type":"NodeText","Data":"（字符）等，用于修改数据类型的大小。"}]}]}]},{"ID":"20250203182209-a1y016i","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-a1y016i","updated":"20250204152036"},"Children":[{"Type":"NodeText","Data":"头文件"}]},{"ID":"20250203182209-hxjgaca","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-hxjgaca","updated":"20250204152036"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003ciostream\u003e\n#include\u003ccstring\u003e\n#include\u003ccmath\u003e\n#include\u003cvector\u003e\n#include\u003cset\u003e\n#include\u003cmap\u003e\n#include\u003cstack\u003e\n#include\u003cqueue\u003e\n#include\u003cunordered_map\u003e\n#include\u003cunordered_set\u003e\n#include\u003cutility\u003e\n#include\u003calgorithm\u003e\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-wuatqit","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-wuatqit","updated":"20250204150819"},"Children":[{"Type":"NodeText","Data":"string字符串"}]},{"ID":"20250204150537-hpdzkrz","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204150537-hpdzkrz","updated":"20250204150819"},"Children":[{"Type":"NodeText","Data":"常用方法"}]},{"ID":"20250204150544-6ithdvb","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204150544-6ithdvb","updated":"20250204150819"},"Children":[{"Type":"NodeText","Data":"构造"}]},{"ID":"20250203182209-kdicmwb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-kdicmwb","updated":"20250204150819"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"string a = \"hello\";\nstring a2 = \"world\";\nstring s1;           // 构造字符串，为空\nstring s3(10, '6');  // 构造字符串，通过构造函数构造为6666666666\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204150637-xk4h2oo","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204150637-xk4h2oo","updated":"20250204151207"},"Children":[{"Type":"NodeText","Data":"输入输出"}]},{"ID":"20250204150644-tak4evd","Type":"NodeParagraph","Properties":{"id":"20250204150644-tak4evd","updated":"20250204150715"},"Children":[{"Type":"NodeText","Data":"C++"}]},{"ID":"20250204150644-fvqh4iu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204150644-fvqh4iu","updated":"20250204151207"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"string s;\ncin \u003e\u003e s;\ngetline(cin,s);   //获取一整行，包括空格\ncout \u003c\u003c s;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204150644-7az7nlz","Type":"NodeParagraph","Properties":{"id":"20250204150644-7az7nlz","updated":"20250204150644"},"Children":[{"Type":"NodeText","Data":"C"}]},{"ID":"20250204150644-el5o3e5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204150644-el5o3e5","updated":"20250204150644"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"string s;\nchar buf[100];\nscanf(\"%s\", \u0026buf);\ns = buf;\nprintf(\"%s\", s.c_str());\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204150802-iqtibnj","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204150802-iqtibnj","updated":"20250204151246"},"Children":[{"Type":"NodeText","Data":"字符串拼接"}]},{"ID":"20250204150830-i20lmgl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204150830-i20lmgl","updated":"20250204150853"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"string a3 = a +\" \" + a2;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204151246-aj771en","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204151246-aj771en","updated":"20250204151329"},"Children":[{"Type":"NodeText","Data":"字符串尾接"}]},{"ID":"20250204151312-6vpd0mc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204151312-6vpd0mc","updated":"20250204151329"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"a += \"world\";\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204150810-nboq0vj","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204150810-nboq0vj","updated":"20250204151354"},"Children":[{"Type":"NodeText","Data":"修改、查询"}]},{"ID":"20250204151101-laa1nvf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204151101-laa1nvf","updated":"20250204151141"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"a[1] = 'h'\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204151354-hbf5n4i","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204151354-hbf5n4i","updated":"20250204151518"},"Children":[{"Type":"NodeText","Data":"取子串"}]},{"ID":"20250204151359-a9a7m1v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204151359-a9a7m1v","updated":"20250204151502"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"string sub = s.substr(2,6)\t//起始下标为2，子串长度为6\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204151518-o53at5i","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204151518-o53at5i","updated":"20250204151619"},"Children":[{"Type":"NodeText","Data":"查找字符串"}]},{"ID":"20250204151528-gccwcis","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204151528-gccwcis","updated":"20250204151552"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cs.find(\"hello\")\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204151619-rvqekki","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204151619-rvqekki","updated":"20250204151707"},"Children":[{"Type":"NodeText","Data":"获取长度"}]},{"ID":"20250204151624-g70pcr0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204151624-g70pcr0","updated":"20250204151632"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cs.length()\u003c\u003cendl; //包括空格，不包括\\0\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204151707-74oxlx4","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204151707-74oxlx4","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"数值与字符串互转（C++11）"}]},{"ID":"20250204151707-pt9nkhj","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20250204151707-pt9nkhj","updated":"20250204151707"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"源"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"目的"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"函数"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"int / long long / float / double / long double"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"to_string()"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"int"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"stoi()"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"long long"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"stoll()"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"float"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"stof()"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"double"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"stod()"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"long double"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"stold()"}]}]}]},{"ID":"20250204151802-tm6u0i3","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204151802-tm6u0i3","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"注意事项"}]},{"ID":"20250204151802-75p576t","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204151802-75p576t","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"尾接字符串一定要用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"+="},{"Type":"NodeText","Data":"​"}]},{"ID":"20250204151802-j0i6r6s","Type":"NodeParagraph","Properties":{"id":"20250204151802-j0i6r6s","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"string 的 += 运算符，将会在原字符串原地尾接字符串。而 + 了再 = 赋值，会先生成一个临时变量，在复制给 string."}]},{"ID":"20250204151802-g7o80mq","Type":"NodeParagraph","Properties":{"id":"20250204151802-g7o80mq","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"通常字符串长度可以很长，如果使用 + 字符串很容易就 TLE 了。"}]},{"ID":"20250204151802-54w4h75","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204151802-54w4h75","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".substr()"},{"Type":"NodeText","Data":"​ 方法的奇葩参数"}]},{"ID":"20250204151802-yrdgp86","Type":"NodeParagraph","Properties":{"id":"20250204151802-yrdgp86","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"一定要注意，C++ string 的取子串的第一个参数是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"子串起点下标"},{"Type":"NodeText","Data":"，第二个参数是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"子串长度"},{"Type":"NodeText","Data":"。"}]},{"ID":"20250204151802-vo5ewkn","Type":"NodeParagraph","Properties":{"id":"20250204151802-vo5ewkn","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"第二个参数不是子串终点！不是子串终点！要与 java 等其他语言区分开来。"}]},{"ID":"20250204151802-jgl78yh","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204151802-jgl78yh","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".find()"},{"Type":"NodeText","Data":"​ 方法的复杂度"}]},{"ID":"20250204151802-9b78lsl","Type":"NodeParagraph","Properties":{"id":"20250204151802-9b78lsl","updated":"20250204151802"},"Children":[{"Type":"NodeText","Data":"该方法实现为暴力实现，时间复杂度为 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"O(n^2)"},{"Type":"NodeText","Data":"."}]},{"ID":"20250203182209-ev7a2hc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-ev7a2hc","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"vector动态数组"}]},{"ID":"20250203185338-l06ee6r","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203185338-l06ee6r","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"常用方法"}]},{"ID":"20250203182209-b8h2388","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-b8h2388","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"构造"}]},{"ID":"20250203182209-mbhw93t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-mbhw93t","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"vector\u003cint\u003e v;         // 构造int数组\nvector\u003cint\u003e v(100);    // 构造初始长100的int数组\nvector\u003cint\u003e v(100, 1); // 构造初始长100的int数组，初值为1，默认初始值为0\n\nvector\u003cvector\u003cint\u003e\u003e mat(100, vector\u003cint\u003e ());       // 构造初始100行，不指定列数的二维数组\nvector\u003cvector\u003cint\u003e\u003e mat(100, vector\u003cint\u003e (666, -1)) // 构造初始100行，初始666列的二维数组，初值为-1\n\nv.resize(10); //设置数组大小,如果新的大小大于当前大小，则新元素会被默认初始化为0\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-5r0ru6a","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-5r0ru6a","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"插入"}]},{"ID":"20250203182209-ezy51hl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-ezy51hl","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"v.push_back(2); //在向量的末尾添加一个新的元素\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-iarkvjr","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-iarkvjr","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"遍历"}]},{"ID":"20250203182209-g2ldxdr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-g2ldxdr","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"for(auto p = v.begin();p!=v.end();p++){  //迭代器，自动调整遍历的空间，p可以看做指针 \n cout\u003c\u003c*p\u003c\u003c\" \";\n}\n//v.end()不是数组的最后一个空间，而是最后一个空间的下一个空间 \n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-sfhuskk","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-sfhuskk","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"删除"}]},{"ID":"20250203182209-gmwif57","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-gmwif57","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"v.pop_back(2);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-80iebm9","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-80iebm9","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"清空"}]},{"ID":"20250203182209-l917feo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-l917feo","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"v.clear();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-7tdp1wg","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-7tdp1wg","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"判空"}]},{"ID":"20250203182209-jx7o99p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-jx7o99p","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"v.empty();  //如果是空返回 `true` 反之返回 `false`\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-ens01vz","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-ens01vz","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"获取长度"}]},{"ID":"20250203182209-6f3plqi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-6f3plqi","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"v.size();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203184924-o1qhq33","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203184924-o1qhq33","updated":"20250203184930"},"Children":[{"Type":"NodeText","Data":"适用情形"}]},{"ID":"20250203184924-u0bjon2","Type":"NodeParagraph","Properties":{"id":"20250203184924-u0bjon2","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"一般情况 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"vector"},{"Type":"NodeText","Data":"​ 可以替换掉普通数组，除非该题卡常。"}]},{"ID":"20250203184924-cjxrm20","Type":"NodeParagraph","Properties":{"id":"20250203184924-cjxrm20","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"有些情况普通数组没法解决："},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"n\\times m"},{"Type":"NodeText","Data":" 的矩阵，"},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"1\\leq n,m\\leq 10^6"},{"Type":"NodeText","Data":" 且 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"n\\times m \\leq 10^6"}]},{"ID":"20250203184924-2t44anc","Type":"NodeList","ListData":{},"Properties":{"id":"20250203184924-2t44anc","updated":"20250203184924"},"Children":[{"ID":"20250203184924-ytmn0sn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250203184924-ytmn0sn","updated":"20250203184924"},"Children":[{"ID":"20250203184924-46tryzp","Type":"NodeParagraph","Properties":{"id":"20250203184924-46tryzp","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"如果用普通数组 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"int mat[1000010][1000010]"},{"Type":"NodeText","Data":"​，浪费内存，会导致 MLE。"}]}]},{"ID":"20250203184924-ebwr48n","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250203184924-ebwr48n","updated":"20250203184924"},"Children":[{"ID":"20250203184924-sl0lvh9","Type":"NodeParagraph","Properties":{"id":"20250203184924-sl0lvh9","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"如果使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; mat(n + 10, vector\u0026lt;int\u0026gt; (m + 10))"},{"Type":"NodeText","Data":"​，完美解决该问题。"}]}]}]},{"ID":"20250203184924-5jncfba","Type":"NodeParagraph","Properties":{"id":"20250203184924-5jncfba","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"另外，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"vector"},{"Type":"NodeText","Data":"​ 的数据储存在堆空间中，不会爆栈。"}]},{"ID":"20250203184924-i7ro5a3","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203184924-i7ro5a3","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"注意事项"}]},{"ID":"20250203184924-u6ovy1p","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203184924-u6ovy1p","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"提前指定长度"}]},{"ID":"20250203184924-j7codcv","Type":"NodeParagraph","Properties":{"id":"20250203184924-j7codcv","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"如果长度已经确定，那么应当直接在构造函数指定长度，而不是一个一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".push_back()"},{"Type":"NodeText","Data":"​. 因为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"vector"},{"Type":"NodeText","Data":"​ 额外内存耗尽后的重分配是有时间开销的，直接指定长度就不会出现重分配了。"}]},{"ID":"20250203184924-x73wn8y","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203184924-x73wn8y","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"当心 size_t 溢出"}]},{"ID":"20250203184924-rfj8dqb","Type":"NodeParagraph","Properties":{"id":"20250203184924-rfj8dqb","updated":"20250203184924"},"Children":[{"Type":"NodeText","Data":"vector 获取长度的方法 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".size()"},{"Type":"NodeText","Data":"​ 返回值类型为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"size_t"},{"Type":"NodeText","Data":"​，通常 OJ 平台使用的是 32 位编译器（有些平台例如 cf 可选 64 位），那么该类型范围为 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"[0,2^{32})"},{"Type":"NodeText","Data":"."}]},{"ID":"20250203184924-g0w0o63","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203184924-g0w0o63","updated":"20250203184924"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"vector\u003cint\u003e a(65536);\nlong long a = a.size() * a.size(); // 直接溢出变成0了\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-4ftha43","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-4ftha43","updated":"20250203185456"},"Children":[{"Type":"NodeText","Data":"set集合"}]},{"ID":"20250203185452-3xbt5da","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203185452-3xbt5da","updated":"20250203185456"},"Children":[{"Type":"NodeText","Data":"常用方法"}]},{"ID":"20250203182209-1iks7z4","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-1iks7z4","updated":"20250203183221"},"Children":[{"Type":"NodeText","Data":"构造"}]},{"ID":"20250203182209-9r0wh0y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-9r0wh0y","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"set \u003cint\u003e s; //跟数组的创建相似,但集合中s后面不能有（参数）\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-w2o8kor","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-w2o8kor","updated":"20250203182209"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"插入"}]},{"ID":"20250203182209-bdx8ztf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-bdx8ztf","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"s.insert(2);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-w20sybp","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-w20sybp","updated":"20250203182209"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"遍历"}]},{"ID":"20250203182209-ms5c2me","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-ms5c2me","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"for(auto p = s.begin();p!=s.end();p++){  //会自动从大到小排序 \n    cout\u003c\u003c*p\u003c\u003c\" \";\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-ylthz06","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-ylthz06","updated":"20250203183841"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"删除"}]},{"ID":"20250203182209-62ch4i0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-62ch4i0","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"s.erase(2);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203183841-34n7dsk","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203183841-34n7dsk","updated":"20250203183858"},"Children":[{"Type":"NodeText","Data":"判断元素是否存在"}]},{"ID":"20250203183850-vv2v3fo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203183850-vv2v3fo","updated":"20250203183858"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cs.count(1)\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-c5zhrej","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-c5zhrej","updated":"20250203184027"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"查找"}]},{"ID":"20250203182209-go4ldbj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-go4ldbj","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003c(s.find(2)!=s.end())\u003c\u003cendl; //查找2是不是集合里的元素，\u003c\u003c()\u003c\u003c括号里整一个是bool值，如果不等于就是1，表明查找成功\n//s.find()返回值是一个指针\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203184040-llp5023","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203184040-llp5023","updated":"20250203184111"},"Children":[{"Type":"NodeText","Data":"清空"}]},{"ID":"20250203184051-m6x5bp6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203184051-m6x5bp6","updated":"20250203184104"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"s.clear();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203184108-cszfx41","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203184108-cszfx41","updated":"20250203184120"},"Children":[{"Type":"NodeText","Data":"判空"}]},{"ID":"20250203184114-7fgjiv1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203184114-7fgjiv1","updated":"20250203184120"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cs.empty()\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203184025-qkmqg3z","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203184025-qkmqg3z","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"获取长度"}]},{"ID":"20250203184031-q7mppz3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203184031-q7mppz3","updated":"20250203184038"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cs.size()\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203185538-tv5i4b5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203185538-tv5i4b5","updated":"20250203185541"},"Children":[{"Type":"NodeText","Data":"适用情形"}]},{"ID":"20250203185538-ytrwobx","Type":"NodeList","ListData":{},"Properties":{"id":"20250203185538-ytrwobx","updated":"20250203185538"},"Children":[{"ID":"20250203185538-w00imuj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250203185538-w00imuj","updated":"20250203185538"},"Children":[{"ID":"20250203185538-i75jvdq","Type":"NodeParagraph","Properties":{"id":"20250203185538-i75jvdq","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"元素去重："},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"[1,1,3,2,4,4]\\to[1,2,3,4]"}]}]},{"ID":"20250203185538-vim2i8i","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250203185538-vim2i8i","updated":"20250203185538"},"Children":[{"ID":"20250203185538-625do2f","Type":"NodeParagraph","Properties":{"id":"20250203185538-625do2f","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"维护顺序："},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"[1,5,3,7,9]\\to[1,3,5,7,9]"}]}]},{"ID":"20250203185538-jbjh2pt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250203185538-jbjh2pt","updated":"20250203185538"},"Children":[{"ID":"20250203185538-rkzh1j9","Type":"NodeParagraph","Properties":{"id":"20250203185538-rkzh1j9","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"元素是否出现过：元素大小 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"[-10^{18},10^{18}]"},{"Type":"NodeText","Data":"，元素数量 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"10^6"},{"Type":"NodeText","Data":"，vis 数组无法实现，通过 set 可以完成。"}]}]}]},{"ID":"20250203185538-pe36dpw","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203185538-pe36dpw","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"注意事项"}]},{"ID":"20250203185538-1hivs1p","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203185538-1hivs1p","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"不存在下标索引"}]},{"ID":"20250203185538-ft3zlym","Type":"NodeParagraph","Properties":{"id":"20250203185538-ft3zlym","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"set 虽说可遍历，但仅可使用迭代器进行遍历，它不存在下标这一概念，无法通过下标访问到数据。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"下面是错误用法："}]},{"ID":"20250203185538-1kw6955","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203185538-1kw6955","updated":"20250203185538"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout \u003c\u003c st[0] \u003c\u003c endl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203185538-r79ktwo","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203185538-r79ktwo","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"元素只读"}]},{"ID":"20250203185538-xyezuij","Type":"NodeParagraph","Properties":{"id":"20250203185538-xyezuij","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"set 的迭代器取到的元素是只读的（因为是 const 迭代器），不可修改其值。如果要改，需要先 erase 再 insert. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"下面是错误用法："}]},{"ID":"20250203185538-0u7l4dn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203185538-0u7l4dn","updated":"20250203185538"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout \u003c\u003c *st.begin() \u003c\u003c endl; // 正确。可读。\n*st.begin() = 1;             // 错误！不可写！\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203185538-1k36sbn","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203185538-1k36sbn","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"不可用迭代器计算下标"}]},{"ID":"20250203185538-lods16x","Type":"NodeParagraph","Properties":{"id":"20250203185538-lods16x","updated":"20250203185538"},"Children":[{"Type":"NodeText","Data":"set 的迭代器不能像 vector 一样相减得到下标。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"下面是错误用法："}]},{"ID":"20250203185538-8yxcg1x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203185538-8yxcg1x","updated":"20250203185538"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"auto it = st.find(2);      // 正确，返回2所在位置的迭代器。\nint idx = it - st.begin(); // 错误！不可相减得到下标。\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-demcq44","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-demcq44","updated":"20250203185624"},"Children":[{"Type":"NodeText","Data":"map键值对"}]},{"ID":"20250203185621-tzno0uy","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203185621-tzno0uy","updated":"20250203185624"},"Children":[{"Type":"NodeText","Data":"常用方法"}]},{"ID":"20250203182209-ew4dlwl","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-ew4dlwl","updated":"20250203183513"},"Children":[{"Type":"NodeText","Data":"构造"}]},{"ID":"20250203182209-ejhtdnv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203182209-ejhtdnv","updated":"20250203183513"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//map是键值对，它会自动将所有的键值对按照建从小到大排序，按照ascII码来排序，h的阿斯克码在w之前,第一个字符相同，就比较第二个\nmap\u003cstring,int\u003e m;\nm[\"hello\"] = 4;\nmap\u003cint, int, greater\u003cint\u003e\u003e st2; // int-\u003eint 的映射（键从大到小）\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-umu6z7g","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-umu6z7g","updated":"20250203182209"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"输出"}]},{"ID":"20250203182209-c0glfxa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-c0glfxa","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//如果存在hello，就返回4，否则返回0\ncout\u003c\u003c\"hello:\"\u003c\u003cm[\"hello\"]\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-7yjdxh1","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-7yjdxh1","updated":"20250203183558"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"遍历"}]},{"ID":"20250203182209-smwrket","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-smwrket","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"for(auto p = m.begin();p != m.end();p++){\n    cout\u003c\u003cp-\u003efirst\u003c\u003c\":\"\u003c\u003cp-\u003esecond\u003c\u003cendl;   //箭头指向指针，获取所有map的键值对\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203183558-77725rb","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203183558-77725rb","updated":"20250203183645"},"Children":[{"Type":"NodeText","Data":"查找"}]},{"ID":"20250203183610-ha7v9qv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203183610-ha7v9qv","updated":"20250203183644"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cm.find(4)\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203183645-ov6cqn9","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203183645-ov6cqn9","updated":"20250203183704"},"Children":[{"Type":"NodeText","Data":"删除"}]},{"ID":"20250203183652-0uaiyn8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203183652-0uaiyn8","updated":"20250203183704"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"m.erase(4);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-g7ylap0","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-g7ylap0","updated":"20250203185720"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"获取长度"}]},{"ID":"20250203182209-3rpxc9k","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-3rpxc9k","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"m.size();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203185720-74989kg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203185720-74989kg","updated":"20250203185723"},"Children":[{"Type":"NodeText","Data":"适用情形"}]},{"ID":"20250203185720-w8ugszr","Type":"NodeParagraph","Properties":{"id":"20250203185720-w8ugszr","updated":"20250203185720"},"Children":[{"Type":"NodeText","Data":"需要维护映射的场景可以使用：输入若干字符串，统计每种字符串的出现次数。("},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"map\u0026lt;string, int\u0026gt; mp"},{"Type":"NodeText","Data":"​)"}]},{"ID":"20250203185720-6a36r1m","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203185720-6a36r1m","updated":"20250203185720"},"Children":[{"Type":"NodeText","Data":"注意事项"}]},{"ID":"20250203185720-mc5fxqo","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203185720-mc5fxqo","updated":"20250203185720"},"Children":[{"Type":"NodeText","Data":"中括号访问时默认值"}]},{"ID":"20250203185720-opnq27j","Type":"NodeParagraph","Properties":{"id":"20250203185720-opnq27j","updated":"20250203185720"},"Children":[{"Type":"NodeText","Data":"如果使用中括号访问 map 时对应的键不存在，那么会新增这个键，并且值为默认值，因此中括号会影响键的存在性。"}]},{"ID":"20250203185720-r2xnm2k","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203185720-r2xnm2k","updated":"20250203185720"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"map\u003cchar, int\u003e mp;\ncout \u003c\u003c mp.count('a') \u003c\u003c endl; // 0\nmp['a'];                       // 即使什么都没做，此时mp['a']=0已经插入了\ncout \u003c\u003c mp.count('a') \u003c\u003c endl; // 1\ncout \u003c\u003c mp['a'] \u003c\u003c endl;       // 0\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203185720-gckiaf3","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203185720-gckiaf3","updated":"20250203185720"},"Children":[{"Type":"NodeText","Data":"不可用迭代器计算下标"}]},{"ID":"20250203185720-r08m678","Type":"NodeParagraph","Properties":{"id":"20250203185720-r08m678","updated":"20250203185720"},"Children":[{"Type":"NodeText","Data":"map 的迭代器不能像 vector 一样相减得到下标。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"下面是错误用法："}]},{"ID":"20250203185720-l2zmz7y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203185720-l2zmz7y","updated":"20250203185720"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"auto it = mp.find('a');      // 正确，返回2所在位置的迭代器。\nint idx = it - mp.begin();   // 错误！不可相减得到下标。\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-u4n873b","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-u4n873b","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"map\u0026set(不排序)"}]},{"ID":"20250203182209-hc2wqvo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-hc2wqvo","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//unordered_map和unordered_set这两个其实就是不会排序的map和set，它们省去了排序的过程，如果刷题的时候超时了，可以使用这两个\nunordered_map \u003cstring,int\u003e m;\nunordered_set \u003cint\u003e s;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-oyoz0s4","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-oyoz0s4","updated":"20250203190021"},"Children":[{"Type":"NodeText","Data":"stack栈"}]},{"ID":"20250203190018-kqf2t51","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203190018-kqf2t51","updated":"20250203190021"},"Children":[{"Type":"NodeText","Data":"常用方法"}]},{"ID":"20250203182209-zc44k17","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-zc44k17","updated":"20250203183232"},"Children":[{"Type":"NodeText","Data":"构造"}]},{"ID":"20250203182209-vgyhw2a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-vgyhw2a","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//栈：先进后出\nstack \u003cint\u003e s;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-3q3p2nw","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-3q3p2nw","updated":"20250203182209"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"插入"}]},{"ID":"20250203182209-wuvewcv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-wuvewcv","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"s.push(1);  //压栈\ns.push(2);\ns.push(4);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-yc9ah8u","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-yc9ah8u","updated":"20250203182209"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"删除"}]},{"ID":"20250203182209-2ukaqrt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-2ukaqrt","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"    s.pop();    //出栈，出最后压的栈\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-a682i93","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-a682i93","updated":"20250203184306"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"获取栈顶"}]},{"ID":"20250203182209-bl9ni4h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-bl9ni4h","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cs.top()\u003c\u003cendl;\n//无法使用迭代器，只能获取栈顶元素也只能操作栈顶元素，不能从栈底开始遍历\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203184306-3ygxdf8","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203184306-3ygxdf8","updated":"20250203184330"},"Children":[{"Type":"NodeText","Data":"清空"}]},{"ID":"20250203184312-arwkz37","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203184312-arwkz37","updated":"20250203184319"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":" while(!s.empty()) {\n        s.pop();\n    }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203184330-k5vh6lp","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203184330-k5vh6lp","updated":"20250203184341"},"Children":[{"Type":"NodeText","Data":"判空"}]},{"ID":"20250203184334-9abunej","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203184334-9abunej","updated":"20250203184341"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cs.empty()\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-k9rgpc3","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-k9rgpc3","updated":"20250203190028"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"获取长度"}]},{"ID":"20250203182209-usgfp07","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-usgfp07","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"s.size();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203190028-z02fcl5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203190028-z02fcl5","updated":"20250203190030"},"Children":[{"Type":"NodeText","Data":"适用情形"}]},{"ID":"20250203190028-klfuqfu","Type":"NodeParagraph","Properties":{"id":"20250203190028-klfuqfu","updated":"20250203190028"},"Children":[{"Type":"NodeText","Data":"如果不卡常的话，就可以直接用它而不需要手写栈了。"}]},{"ID":"20250203190028-5ehiwb7","Type":"NodeParagraph","Properties":{"id":"20250203190028-5ehiwb7","updated":"20250203190028"},"Children":[{"Type":"NodeText","Data":"另外，vector 也可以当栈用，vector 的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".back()"},{"Type":"NodeText","Data":"​ 取尾部元素，就相当于取栈顶，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".push_back()"},{"Type":"NodeText","Data":"​ 相当于进栈，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":".pop_back()"},{"Type":"NodeText","Data":"​ 相当于出栈。"}]},{"ID":"20250203190028-zgxc2v5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203190028-zgxc2v5","updated":"20250203190053"},"Children":[{"Type":"NodeText","Data":"注意事项"}]},{"ID":"20250203190028-zjdvv1x","Type":"NodeParagraph","Properties":{"id":"20250203190028-zjdvv1x","updated":"20250203190053"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"不可访问内部元素！(cout\u0026lt;\u0026lt;)"}]},{"ID":"20250203182209-0o3ehsp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-0o3ehsp","updated":"20250203190140"},"Children":[{"Type":"NodeText","Data":"queue队列"}]},{"ID":"20250203190136-djlw15o","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203190136-djlw15o","updated":"20250203190140"},"Children":[{"Type":"NodeText","Data":"常用方法"}]},{"ID":"20250203182209-wmex448","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-wmex448","updated":"20250203183237"},"Children":[{"Type":"NodeText","Data":"构造"}]},{"ID":"20250203182209-f5b5nbw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-f5b5nbw","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":" //队列：先进先出\n    queue \u003cint\u003e q;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-73usrjf","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-73usrjf","updated":"20250203182209"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"插入"}]},{"ID":"20250203182209-6835o2j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-6835o2j","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"q.push(1);  //入队，入队尾\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-480o1rs","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-480o1rs","updated":"20250203184424"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"删除"}]},{"ID":"20250203182209-mby7mlg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-mby7mlg","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"q.pop();    //出队，出队首\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203184424-ypiz6lg","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203184424-ypiz6lg","updated":"20250203184430"},"Children":[{"Type":"NodeText","Data":"清空"}]},{"ID":"20250203184424-5pec4fe","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203184424-5pec4fe","updated":"20250203184430"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":" while(!q.empty()) {\n        q.pop();\n    }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203184424-d4xouql","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203184424-d4xouql","updated":"20250203184433"},"Children":[{"Type":"NodeText","Data":"判空"}]},{"ID":"20250203184424-747xc19","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203184424-747xc19","updated":"20250203184433"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cq.empty()\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-m2cgzxg","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-m2cgzxg","updated":"20250203182209"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"获取队首和队尾"}]},{"ID":"20250203182209-z1c25pw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-z1c25pw","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cq.front()\u003c\u003c\" \"\u003c\u003cq.back()\u003c\u003cendl;  //获取队首和获取队尾\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-vscxc2j","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203182209-vscxc2j","updated":"20250203190149"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### "},{"Type":"NodeText","Data":"获取长度"}]},{"ID":"20250203182209-qqmwsz2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-qqmwsz2","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"q.size();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203190149-zy9fhj4","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203190149-zy9fhj4","updated":"20250203190151"},"Children":[{"Type":"NodeText","Data":"适用情形"}]},{"ID":"20250203190149-ylaeyot","Type":"NodeParagraph","Properties":{"id":"20250203190149-ylaeyot","updated":"20250203190149"},"Children":[{"Type":"NodeText","Data":"如果不卡常的话，就可以直接用它而不需要手写队列了。"}]},{"ID":"20250203190149-gf15q7p","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203190149-gf15q7p","updated":"20250225123505"},"Children":[{"Type":"NodeText","Data":"注意事项"}]},{"ID":"20250203190149-71xvsep","Type":"NodeParagraph","Properties":{"id":"20250203190149-71xvsep","updated":"20250203190207"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"不可访问内部元素！"}]},{"ID":"20250225123401-bdtx6on","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250225123401-bdtx6on","updated":"20250225123604"},"Children":[{"Type":"NodeText","Data":"deque双端队列"}]},{"ID":"20250225123509-wetk6pq","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250225123509-wetk6pq","updated":"20250225123604"},"Children":[{"Type":"NodeText","Data":"常用方法"}]},{"ID":"20250225123514-8687vxi","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250225123514-8687vxi","updated":"20250225123604"},"Children":[{"Type":"NodeText","Data":"构造"}]},{"ID":"20250225123549-v0yyhv5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250225123549-v0yyhv5","updated":"20250225123551"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"deque\u003cint\u003e d;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250225123600-rwvdqno","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250225123600-rwvdqno","updated":"20250225123712"},"Children":[{"Type":"NodeText","Data":"插入"}]},{"ID":"20250225123606-9zzrzdh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250225123606-9zzrzdh","updated":"20250225123627"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//在前端插入元素\nd.push_front(6);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250225123629-fx9odv1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250225123629-fx9odv1","updated":"20250225123642"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//在后端插入元素\nd.push_back(6);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250225123709-67s8fff","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250225123709-67s8fff","updated":"20250225123853"},"Children":[{"Type":"NodeText","Data":"删除"}]},{"ID":"20250225123715-qj308e9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250225123715-qj308e9","updated":"20250225123817"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//从前端删除元素\nif(!d.empty()){\n\td.pop_front();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250225123819-s1rpp9z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250225123819-s1rpp9z","updated":"20250225123832"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//从后端删除元素\nif(!d.empty()){\n\td.pop_back();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250225123846-dn2yy55","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250225123846-dn2yy55","updated":"20250225124032"},"Children":[{"Type":"NodeText","Data":"获取队首和队尾"}]},{"ID":"20250225123857-jix3dx3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250225123857-jix3dx3","updated":"20250225123941"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//与队列相同\nd.front();\nd.back();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250225124032-r3ffs9r","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250225124032-r3ffs9r","updated":"20250225124037"},"Children":[{"Type":"NodeText","Data":"清空"}]},{"ID":"20250225124032-hj48yq7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250225124032-hj48yq7","updated":"20250225124037"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"d.clear();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250225124032-myu22hc","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250225124032-myu22hc","updated":"20250225124101"},"Children":[{"Type":"NodeText","Data":"判空"}]},{"ID":"20250225124032-1j9njvl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250225124032-1j9njvl","updated":"20250225124040"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cd.empty()\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250225124101-wrk3nt9","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250225124101-wrk3nt9","updated":"20250225124119"},"Children":[{"Type":"NodeText","Data":"获取长度"}]},{"ID":"20250225124101-emvpmso","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250225124101-emvpmso","updated":"20250225124119"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"d.size();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203190547-ij6ccbm","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203190547-ij6ccbm","updated":"20250203190911"},"Children":[{"Type":"NodeText","Data":"priority queue优先队列"}]},{"ID":"20250203190602-mu07uip","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203190602-mu07uip","updated":"20250203190911"},"Children":[{"Type":"NodeText","Data":"常用方法"}]},{"ID":"20250203190607-28338z8","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203190607-28338z8","updated":"20250203190911"},"Children":[{"Type":"NodeText","Data":"构造"}]},{"ID":"20250203190613-w24aaiq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203190613-w24aaiq","updated":"20250203190821"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//构造大顶堆:队首总是最大的元素\npriority_queue \u003cint\u003e pque;\n//构造小顶堆\npriority_queue\u003cint, vector\u003cint\u003e, greater\u003cint\u003e\u003e min_pq;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203190911-6nsnp59","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203190911-6nsnp59","updated":"20250203190951"},"Children":[{"Type":"NodeText","Data":"插入"}]},{"ID":"20250203190924-hq41g79","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203190924-hq41g79","updated":"20250203190946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//进堆\npque.push(3);\npque.push(1);\npque.push(4);\npque.push(2);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203190951-9h4t0aq","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203190951-9h4t0aq","updated":"20250203191048"},"Children":[{"Type":"NodeText","Data":"获取堆顶"}]},{"ID":"20250203191002-agnoi09","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203191002-agnoi09","updated":"20250203191028"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"while(!pque.empty()){\n        cout\u003c\u003cpque.top()\u003c\u003c\" \";\n        pque.pop();\n    }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203191048-otknc11","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203191048-otknc11","updated":"20250225124027"},"Children":[{"Type":"NodeText","Data":"获取长度"}]},{"ID":"20250203191053-n72qroe","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203191053-n72qroe","updated":"20250203191058"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003cpque.size()\u003c\u003cendl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203191132-vyjsxsf","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203191132-vyjsxsf","updated":"20250203191136"},"Children":[{"Type":"NodeText","Data":"适用情形"}]},{"ID":"20250203191132-xf5yvch","Type":"NodeParagraph","Properties":{"id":"20250203191132-xf5yvch","updated":"20250203191132"},"Children":[{"Type":"NodeText","Data":"持续维护元素的有序性：每次向队列插入大小不定的元素，或者每次从队列里取出大小最小/最大的元素，元素数量 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"n"},{"Type":"NodeText","Data":"，插入操作数量 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"k"},{"Type":"NodeText","Data":"."}]},{"ID":"20250203191132-eyqfxcy","Type":"NodeList","ListData":{},"Properties":{"id":"20250203191132-eyqfxcy","updated":"20250203191132"},"Children":[{"ID":"20250203191132-u6ewo9a","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250203191132-u6ewo9a","updated":"20250203191132"},"Children":[{"ID":"20250203191132-keyo7kd","Type":"NodeParagraph","Properties":{"id":"20250203191132-keyo7kd","updated":"20250203191132"},"Children":[{"Type":"NodeText","Data":"每次插入后进行快速排序："},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"k\\cdot n\\log n"}]}]},{"ID":"20250203191132-8s5ujef","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250203191132-8s5ujef","updated":"20250203191132"},"Children":[{"ID":"20250203191132-xtqnqg9","Type":"NodeParagraph","Properties":{"id":"20250203191132-xtqnqg9","updated":"20250203191132"},"Children":[{"Type":"NodeText","Data":"使用优先队列维护："},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"k\\cdot\\log n"}]}]}]},{"ID":"20250203191132-pa09ocs","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203191132-pa09ocs","updated":"20250203191132"},"Children":[{"Type":"NodeText","Data":"注意事项"}]},{"ID":"20250203191132-24jbm28","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203191132-24jbm28","updated":"20250203191132"},"Children":[{"Type":"NodeText","Data":"仅堆顶可读"}]},{"ID":"20250203191132-33in26c","Type":"NodeParagraph","Properties":{"id":"20250203191132-33in26c","updated":"20250203191132"},"Children":[{"Type":"NodeText","Data":"只可访问堆顶，其他元素都无法读取到。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"下面是错误用法："}]},{"ID":"20250203191132-rv4nhef","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203191132-rv4nhef","updated":"20250203191132"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout \u003c\u003c pque[1] \u003c\u003c endl;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203191132-k0rzbkz","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250203191132-k0rzbkz","updated":"20250203191132"},"Children":[{"Type":"NodeText","Data":"所有元素不可写"}]},{"ID":"20250203191132-h2ohkwr","Type":"NodeParagraph","Properties":{"id":"20250203191132-h2ohkwr","updated":"20250203191132"},"Children":[{"Type":"NodeText","Data":"堆中所有元素是不可修改的。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"下面是错误用法："}]},{"ID":"20250203191132-bdigdtv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203191132-bdigdtv","updated":"20250203191132"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"pque[1] = 2;\npque.top() = 1;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203191132-t8wa1dl","Type":"NodeParagraph","Properties":{"id":"20250203191132-t8wa1dl","updated":"20250203191132"},"Children":[{"Type":"NodeText","Data":"如果你恰好要修改的是堆顶元素，那么是可以完成的："}]},{"ID":"20250203191132-2xhc24g","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250203191132-2xhc24g","updated":"20250203191132"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"int tp = pque.top();\npque.pop();\npque.push(tp + 1);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250203182209-7zmb6jn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250203182209-7zmb6jn","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"bitset位运算"}]},{"ID":"20250203182209-ib2ge0e","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203182209-ib2ge0e","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"插入"}]},{"ID":"20250203182209-26c27pb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-26c27pb","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"//bitset类似一个字符数组，但是它是从二进制的低位到高位依次为b[0],b[1]...，所以按照b[i]的方式输出和直接输出b的结果相反\nbitset \u003c5\u003e a;       //5表示5个二进制位，初始化为0\nbitset \u003c5\u003e b(19);   //19的二进制是10011，所以b[0]=1,b[1]=1,b[2]=0,b[3]=0,b[4]=1\nbitset \u003c6\u003e c(\"111\");//111为字符串，字符串只能是0或1，输出结果是000111，不做进制转换\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-rdjqqu5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203182209-rdjqqu5","updated":"20250203182209"},"Children":[{"Type":"NodeText","Data":"遍历"}]},{"ID":"20250203182209-c8hdxmo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-c8hdxmo","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"for(int i = 0;i\u003c5;i++){\n    cout\u003c\u003cb[i]\u003c\u003c\" \";\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250203182209-35cuthb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250203182209-35cuthb","updated":"20250204203657"},"Children":[{"Type":"NodeText","Data":"各种方法"}]},{"ID":"20250203182209-43r06gh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Y3Bw","CodeBlockCloseFence":"YGBg","Properties":{"id":"20250203182209-43r06gh","updated":"20250203182209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout\u003c\u003c\"是否存在1:\"\u003c\u003cb.any()\u003c\u003cendl;      //判断是否存在1，有返回1，没有返回0\ncout\u003c\u003c\"是否不存在1:\"\u003c\u003cb.none()\u003c\u003cendl;   //判断是否不存在1，不存在返回1，存在返回0\ncout\u003c\u003c\"1的个数为:\"\u003c\u003cb.count()\u003c\u003cendl;\ncout\u003c\u003c\"元素个数为:\"\u003c\u003cb.size()\u003c\u003cendl;\ncout\u003c\u003c\"下标为i的元素是不是1:\"\u003c\u003cb.test(0)\u003c\u003cendl;\ncout\u003c\u003c\"把下标为i的元素变为1:\"\u003c\u003cb.set(2)\u003c\u003cendl;      //10111\ncout\u003c\u003c\"第i位归零\"\u003c\u003cb.reset(2)\u003c\u003cendl;        //10011\ncout\u003c\u003c\"所有位归零:\"\u003c\u003cb.reset()\u003c\u003cendl;   //00000\ncout\u003c\u003c\"第i位取反:\"\u003c\u003cb.flip(2)\u003c\u003cendl;        //00100\ncout\u003c\u003c\"所有位取反:\"\u003c\u003cb.flip()\u003c\u003cendl;        //11011\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3}]},{"ID":"20250204203657-0maenqk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204203657-0maenqk","updated":"20250204203752"},"Children":[{"Type":"NodeText","Data":"pair二元组"}]},{"ID":"20250204203709-6fzf5bg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204203709-6fzf5bg","updated":"20250204203752"},"Children":[{"Type":"NodeText","Data":"常用方法"}]},{"ID":"20250204203716-ou6b9xf","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204203716-ou6b9xf","updated":"20250204203752"},"Children":[{"Type":"NodeText","Data":"构造"}]},{"ID":"20250204203725-uf3mixa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204203725-uf3mixa","updated":"20250204203752"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"pair\u003cint, string\u003e p1;                    // 默认构造\npair\u003cint, string\u003e p2(1, \"hello\");        // 构造函数初始化\npair\u003cint, string\u003e p3 = {2, \"world\"};     // 列表初始化\npair\u003cint, string\u003e p4 = make_pair(3, \"!\"); // 使用make_pair函数\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204203752-azczrvn","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204203752-azczrvn","updated":"20250204203855"},"Children":[{"Type":"NodeText","Data":"访问"}]},{"ID":"20250204203830-hojlzie","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204203830-hojlzie","updated":"20250204203855"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"cout \u003c\u003c p2.first \u003c\u003c endl;   // 访问第一个元素：1\ncout \u003c\u003c p2.second \u003c\u003c endl;  // 访问第二个元素：hello\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204203855-7a4fft9","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204203855-7a4fft9","updated":"20250204203939"},"Children":[{"Type":"NodeText","Data":"修改"}]},{"ID":"20250204203903-lyfr6im","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204203903-lyfr6im","updated":"20250204203915"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"p2.first = 2;\np2.second = \"world\";\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204203939-m0fgdy5","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204203939-m0fgdy5","updated":"20250204204154"},"Children":[{"Type":"NodeText","Data":"比较"}]},{"ID":"20250204203951-ba7ti8l","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204203951-ba7ti8l","updated":"20250204204012"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"pair\u003cint, int\u003e p1 = {1, 2};\npair\u003cint, int\u003e p2 = {1, 3};\npair\u003cint, int\u003e p3 = {1, 2};\n  \n// 比较运算\ncout \u003c\u003c (p1 \u003c p2) \u003c\u003c endl;   // true：先比较first，相等时比较second\ncout \u003c\u003c (p1 == p3) \u003c\u003c endl;  // true：first和second都相等\ncout \u003c\u003c (p1 != p2) \u003c\u003c endl;  // true\ncout \u003c\u003c (p1 \u003c= p2) \u003c\u003c endl;  // true\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204204154-qyovuvz","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204204154-qyovuvz","updated":"20250204204313"},"Children":[{"Type":"NodeText","Data":"与vector连用"}]},{"ID":"20250204204248-0rvqma6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204204248-0rvqma6","updated":"20250204204300"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"vector\u003cpair\u003cint, string\u003e\u003e vec;\nvec.push_back({1, \"one\"});\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204204313-fa9r2a0","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204204313-fa9r2a0","updated":"20250204204331"},"Children":[{"Type":"NodeText","Data":"排序"}]},{"ID":"20250204204323-lnquo5q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204204323-lnquo5q","updated":"20250204204329"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"sort(vec.begin(), vec.end());  // 默认按first排序，first相等时按second排序\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204204331-bndoeg2","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250204204331-bndoeg2","updated":"20250204204416"},"Children":[{"Type":"NodeText","Data":"自定义排序"}]},{"ID":"20250204204348-rds073w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204204348-rds073w","updated":"20250204204416"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"bool cmp(pair\u003cint, int\u003e a, pair\u003cint, int\u003e b)\n{\n    if (a.second != b.second)\n        return a.second \u003c b.second;\t//按second排序\n    return a.first \u003e b.first;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204204336-x3dkxwn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204204336-x3dkxwn","updated":"20250204204626"},"Children":[{"Type":"NodeText","Data":"适用情形"}]},{"ID":"20250204204625-aec4ify","Type":"NodeList","ListData":{},"Properties":{"id":"20250204204625-aec4ify","updated":"20250204204625"},"Children":[{"ID":"20250204204625-0ozjnbr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204204625-0ozjnbr","updated":"20250204204625"},"Children":[{"ID":"20250204204625-pqd1zh8","Type":"NodeParagraph","Properties":{"id":"20250204204625-pqd1zh8","updated":"20250204204625"},"Children":[{"Type":"NodeText","Data":"函数需要返回两个值时"}]}]},{"ID":"20250204204625-3p49tjp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204204625-3p49tjp","updated":"20250204204625"},"Children":[{"ID":"20250204204625-diu8025","Type":"NodeParagraph","Properties":{"id":"20250204204625-diu8025","updated":"20250204204625"},"Children":[{"Type":"NodeText","Data":"作为map的插入操作的返回值"}]}]},{"ID":"20250204204625-92x34qn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204204625-92x34qn","updated":"20250204204625"},"Children":[{"ID":"20250204204625-sm0ortr","Type":"NodeParagraph","Properties":{"id":"20250204204625-sm0ortr","updated":"20250204204625"},"Children":[{"Type":"NodeText","Data":"需要将两个值关联在一起进行排序或存储时"}]}]},{"ID":"20250204204625-zdzimke","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204204625-zdzimke","updated":"20250204204625"},"Children":[{"ID":"20250204204625-q0wtckd","Type":"NodeParagraph","Properties":{"id":"20250204204625-q0wtckd","updated":"20250204204625"},"Children":[{"Type":"NodeText","Data":"图算法中存储边的权重和顶点等信息"}]}]}]},{"ID":"20250204204626-7agvuh9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204204626-7agvuh9","updated":"20250204205127"},"Children":[{"Type":"NodeText","Data":"sort()排序函数"}]},{"ID":"20250204204959-dad7elo","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204204959-dad7elo","updated":"20250204205127"},"Children":[{"Type":"NodeText","Data":"基本语法"}]},{"ID":"20250204205106-r3hm6f0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204205106-r3hm6f0","updated":"20250204205126"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"sort(first, last);  // 默认升序排序\nsort(first, last, compare);  // 使用自定义比较函数\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204205127-ts6omcm","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204205127-ts6omcm","updated":"20250204205200"},"Children":[{"Type":"NodeText","Data":"基本示例"}]},{"ID":"20250204205131-ywhfmi3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204205131-ywhfmi3","updated":"20250204205159"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"// 对vector排序\nvector\u003cint\u003e vec = {5, 2, 8, 1, 9};\nsort(vec.begin(), vec.end());  // 升序: 1, 2, 5, 8, 9\n  \n// 对数组排序\nint arr[] = {5, 2, 8, 1, 9};\nsort(arr, arr + 5);  // 升序: 1, 2, 5, 8, 9\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204205200-zj53owk","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204205200-zj53owk","updated":"20250204205312"},"Children":[{"Type":"NodeText","Data":"自定义比较函数"}]},{"ID":"20250204205241-86r3agm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204205241-86r3agm","updated":"20250204205312"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"bool compare(int a, int b) {\n    return a \u003e b;  // 降序排序\n}\n\nsort(vec.begin(), vec.end(), compare);  // 降序: 9, 8, 5, 2, 1\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204205312-h92r0eh","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204205312-h92r0eh","updated":"20250204205507"},"Children":[{"Type":"NodeText","Data":"对结构体排序"}]},{"ID":"20250204205431-2rz4n9i","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204205431-2rz4n9i","updated":"20250204205507"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"struct Student {\n    string name;\n    int score;\n\nbool compareStudent(const Student\u0026 a, const Student\u0026 b) {\n    return a.score \u003c b.score;\n}\n\nsort(students.begin(), students.end(), compareStudent);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204205459-bwe7ezw","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204205459-bwe7ezw","updated":"20250204205559"},"Children":[{"Type":"NodeText","Data":"主要特点"}]},{"ID":"20250204205559-oinw7pq","Type":"NodeList","ListData":{},"Properties":{"id":"20250204205559-oinw7pq","updated":"20250204205559"},"Children":[{"ID":"20250204205559-8qr6wrv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204205559-8qr6wrv","updated":"20250204205559"},"Children":[{"ID":"20250204205559-4wnyhzn","Type":"NodeParagraph","Properties":{"id":"20250204205559-4wnyhzn","updated":"20250204205559"},"Children":[{"Type":"NodeText","Data":"sort函数在\u003calgorithm\u003e头文件中"}]}]},{"ID":"20250204205559-3ynfkb1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204205559-3ynfkb1","updated":"20250204205559"},"Children":[{"ID":"20250204205559-objxyoo","Type":"NodeParagraph","Properties":{"id":"20250204205559-objxyoo","updated":"20250204205559"},"Children":[{"Type":"NodeText","Data":"默认使用operator \u003c 进行升序排序"}]}]},{"ID":"20250204205559-pt7126y","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204205559-pt7126y","updated":"20250204205559"},"Children":[{"ID":"20250204205559-2tawmib","Type":"NodeParagraph","Properties":{"id":"20250204205559-2tawmib","updated":"20250204205559"},"Children":[{"Type":"NodeText","Data":"时间复杂度为O(nlogn)"}]}]},{"ID":"20250204205559-yvejrzr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204205559-yvejrzr","updated":"20250204205559"},"Children":[{"ID":"20250204205559-52i5x8y","Type":"NodeParagraph","Properties":{"id":"20250204205559-52i5x8y","updated":"20250204205559"},"Children":[{"Type":"NodeText","Data":"可以排序任何支持随机访问迭代器的容器（如vector、array）"}]}]}]},{"ID":"20250204211134-esnpmxo","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204211134-esnpmxo","updated":"20250204211134"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"max()"},{"Type":"NodeText","Data":"​ / "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"min()"},{"Type":"NodeText","Data":"​最大值最小值"}]},{"ID":"20250204211134-i53cvvu","Type":"NodeParagraph","Properties":{"id":"20250204211134-i53cvvu","updated":"20250204211134"},"Children":[{"Type":"NodeText","Data":"返回最大值 / 最小值的"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数值"}]},{"ID":"20250204211134-vqtikyc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204211134-vqtikyc","updated":"20250204211134"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"用法示例"}]},{"ID":"20250204211134-3i1hwr4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204211134-3i1hwr4","updated":"20250204211134"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"int mx = max(1, 2); // 2\nint mn = min(1, 2); // 1\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204211134-edxmipj","Type":"NodeParagraph","Properties":{"id":"20250204211134-edxmipj","updated":"20250204211134"},"Children":[{"Type":"NodeText","Data":"在 C++11 之后，可以使用列表构造语法传入一个列表，这样就能一次性给多个元素找最大值而不用套娃了："}]},{"ID":"20250204211134-sdkh1ih","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204211134-sdkh1ih","updated":"20250204211134"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"// Before C++11\nint mx = max(max(1, 2), max(3, 4)); // 4\nint mn = min(min(1, 2), min(3, 4)); // 1\n\n// After C++11\nint mx = max({1, 2, 3, 4}); // 4\nint mn = min({1, 2, 3, 4}); // 1\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204211326-gtrhrkk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204211326-gtrhrkk","updated":"20250204220203"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"unique()"},{"Type":"NodeText","Data":"​去重函数"}]},{"ID":"20250204211326-0znnczn","Type":"NodeParagraph","Properties":{"id":"20250204211326-0znnczn","updated":"20250204211326"},"Children":[{"Type":"NodeText","Data":"消除数组的重复"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"相邻"},{"Type":"NodeText","Data":"元素，数组长度不变，但是有效数据缩短，返回的是有效数据位置的结尾迭代器。"}]},{"ID":"20250204211326-cneyn5w","Type":"NodeParagraph","Properties":{"id":"20250204211326-cneyn5w","updated":"20250204211326"},"Children":[{"Type":"NodeText","Data":"例如："},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"[1,1,4,5,1,4]\\to[1,4,5,1,4,\\underline?]"},{"Type":"NodeText","Data":"，下划线位置为返回的迭代器指向。"}]},{"ID":"20250204211326-fz7ewfv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204211326-fz7ewfv","updated":"20250204211326"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"template\u003c class ForwardIt \u003e\nForwardIt unique( ForwardIt first, ForwardIt last );\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204211326-g624grc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204211326-g624grc","updated":"20250204211448"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"用法示例"}]},{"ID":"20250204211326-blqvz4n","Type":"NodeParagraph","Properties":{"id":"20250204211326-blqvz4n","updated":"20250204211326"},"Children":[{"Type":"NodeText","Data":"单独使用 unique 并不能达成去重效果，因为它只消除"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"相邻"},{"Type":"NodeText","Data":"的重复元素。但是如果序列有序，那么它就能去重了。"}]},{"ID":"20250204211326-dn00l97","Type":"NodeParagraph","Properties":{"id":"20250204211326-dn00l97","updated":"20250204211326"},"Children":[{"Type":"NodeText","Data":"但是它去重后，序列尾部会产生一些无效数据："},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"[1,1,2,4,4,4,5]\\to[1,2,4,5,\\underline?,?,?]"},{"Type":"NodeText","Data":"，为了删掉这些无效数据，我们需要结合 erase."}]},{"ID":"20250204211326-3i6lmhv","Type":"NodeParagraph","Properties":{"id":"20250204211326-3i6lmhv","updated":"20250204211326"},"Children":[{"Type":"NodeText","Data":"最终，给 vector 去重的写法便是："}]},{"ID":"20250204211326-5hnhgrk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204211326-5hnhgrk","updated":"20250204211326"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"vector\u003cint\u003e arr{1, 2, 1, 4, 5, 4, 4};\nsort(arr.begin(), arr.end());\narr.erase(unique(arr.begin(), arr.end()), arr.end());\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204211448-lv6z5pq","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204211448-lv6z5pq","updated":"20250204214043"},"Children":[{"Type":"NodeText","Data":"数学函数"}]},{"ID":"20250204211448-4bcoa23","Type":"NodeParagraph","Properties":{"id":"20250204211448-4bcoa23","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"所有函数参数均支持 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"​ / "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"long long"},{"Type":"NodeText","Data":"​ / "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float"},{"Type":"NodeText","Data":"​ / "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"double"},{"Type":"NodeText","Data":"​ / "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"long double"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250204211448-x6xtr6u","Type":"NodeTable","TableAligns":[0,0],"Properties":{"colgroup":"|","id":"20250204211448-x6xtr6u","updated":"20250204211448"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"公式"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"示例"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"f(x)=\\lvert x\\rvert"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"abs(-1.0)"},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"f(x)=e^x"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"exp(2)"},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"f(x)=\\ln x"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"log(3)"},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"f(x,y)=x^y"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"pow(2, 3)"},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"f(x)=\\sqrt x"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"sqrt(2)"},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"f(x)=\\lceil x\\rceil"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ceil(2.1)"},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"f(x)=\\lfloor x\\rfloor"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"floor(2.1)"},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"f(x)=\\left\u003cx\\right\u003e"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"rount(2.1)"},{"Type":"NodeText","Data":"​"}]}]}]},{"ID":"20250204211448-3w45yjx","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204211448-3w45yjx","updated":"20250204214043"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"注意事项"}]},{"ID":"20250204211448-43hpaoq","Type":"NodeParagraph","Properties":{"id":"20250204211448-43hpaoq","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"由于浮点误差，有些的数学函数的行为可能与预期不符，导致 WA。如果你的操作数都是整型，那么用下面的写法会更稳妥。"}]},{"ID":"20250204211448-x9w9k0o","Type":"NodeList","ListData":{},"Properties":{"id":"20250204211448-x9w9k0o","updated":"20250204211448"},"Children":[{"ID":"20250204211448-u5wqfuw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-u5wqfuw","updated":"20250204211448"},"Children":[{"ID":"20250204211448-24s3wvf","Type":"NodeParagraph","Properties":{"id":"20250204211448-24s3wvf","updated":"20250204211448"},"Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\lfloor\\frac{a}{b}\\rfloor"}]},{"ID":"20250204211448-yy51bdm","Type":"NodeList","ListData":{},"Properties":{"id":"20250204211448-yy51bdm","updated":"20250204211448"},"Children":[{"ID":"20250204211448-4hni2xw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-4hni2xw","updated":"20250204211448"},"Children":[{"ID":"20250204211448-zzsupf6","Type":"NodeParagraph","Properties":{"id":"20250204211448-zzsupf6","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"别用："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"floor(1.0 * a / b)"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20250204211448-rp3yjds","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-rp3yjds","updated":"20250204211448"},"Children":[{"ID":"20250204211448-wrnjpwm","Type":"NodeParagraph","Properties":{"id":"20250204211448-wrnjpwm","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"要用："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"a / b"},{"Type":"NodeText","Data":"​"}]}]}]}]},{"ID":"20250204211448-0athy3d","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-0athy3d","updated":"20250204211448"},"Children":[{"ID":"20250204211448-0gzxv66","Type":"NodeParagraph","Properties":{"id":"20250204211448-0gzxv66","updated":"20250204211448"},"Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\lceil\\frac{a}{b}\\rceil"}]},{"ID":"20250204211448-ozmtzmg","Type":"NodeList","ListData":{},"Properties":{"id":"20250204211448-ozmtzmg","updated":"20250204211448"},"Children":[{"ID":"20250204211448-wsiihpp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-wsiihpp","updated":"20250204211448"},"Children":[{"ID":"20250204211448-mh6h64j","Type":"NodeParagraph","Properties":{"id":"20250204211448-mh6h64j","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"别用："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ceil(1.0 * a / b)"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20250204211448-3znirvp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-3znirvp","updated":"20250204211448"},"Children":[{"ID":"20250204211448-8l2h0e6","Type":"NodeParagraph","Properties":{"id":"20250204211448-8l2h0e6","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"要用："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(a + b - 1) / b"},{"Type":"NodeText","Data":"​  （"},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\lceil\\frac{a}{b}\\rceil=\\lfloor\\frac{a+b-1}{b}\\rfloor"},{"Type":"NodeText","Data":"）"}]}]}]}]},{"ID":"20250204211448-mcacs74","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-mcacs74","updated":"20250204211448"},"Children":[{"ID":"20250204211448-dyjr95z","Type":"NodeParagraph","Properties":{"id":"20250204211448-dyjr95z","updated":"20250204211448"},"Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\lfloor\\sqrt a\\rfloor"}]},{"ID":"20250204211448-05e1s27","Type":"NodeList","ListData":{},"Properties":{"id":"20250204211448-05e1s27","updated":"20250204211448"},"Children":[{"ID":"20250204211448-4w8a3mk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-4w8a3mk","updated":"20250204211448"},"Children":[{"ID":"20250204211448-awc7jqp","Type":"NodeParagraph","Properties":{"id":"20250204211448-awc7jqp","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"别用："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(int) sqrt(a)"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20250204211448-fkhpmbg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-fkhpmbg","updated":"20250204211448"},"Children":[{"ID":"20250204211448-i5dguxz","Type":"NodeParagraph","Properties":{"id":"20250204211448-i5dguxz","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"要用：二分查找"}]}]}]}]},{"ID":"20250204211448-apfd0iq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-apfd0iq","updated":"20250204211448"},"Children":[{"ID":"20250204211448-e86m4gg","Type":"NodeParagraph","Properties":{"id":"20250204211448-e86m4gg","updated":"20250204211448"},"Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"a^b"}]},{"ID":"20250204211448-bdaxe7i","Type":"NodeList","ListData":{},"Properties":{"id":"20250204211448-bdaxe7i","updated":"20250204211448"},"Children":[{"ID":"20250204211448-e705h76","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-e705h76","updated":"20250204211448"},"Children":[{"ID":"20250204211448-jvvy1n3","Type":"NodeParagraph","Properties":{"id":"20250204211448-jvvy1n3","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"别用："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"pow(a, b)"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20250204211448-b8hzrw9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-b8hzrw9","updated":"20250204211448"},"Children":[{"ID":"20250204211448-2grelzw","Type":"NodeParagraph","Properties":{"id":"20250204211448-2grelzw","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"要用：快速幂 https://io.zouht.com/18.html"}]}]}]}]},{"ID":"20250204211448-0dldko0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-0dldko0","updated":"20250204211448"},"Children":[{"ID":"20250204211448-8yuhfx5","Type":"NodeParagraph","Properties":{"id":"20250204211448-8yuhfx5","updated":"20250204211448"},"Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\lfloor\\log_2 a\\rfloor"}]},{"ID":"20250204211448-v3bmnik","Type":"NodeList","ListData":{},"Properties":{"id":"20250204211448-v3bmnik","updated":"20250204211448"},"Children":[{"ID":"20250204211448-s12hnxt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-s12hnxt","updated":"20250204211448"},"Children":[{"ID":"20250204211448-nklo0i5","Type":"NodeParagraph","Properties":{"id":"20250204211448-nklo0i5","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"别用："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"log2(a)"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20250204211448-lur6zdn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204211448-lur6zdn","updated":"20250204211448"},"Children":[{"ID":"20250204211448-x6hbpw2","Type":"NodeParagraph","Properties":{"id":"20250204211448-x6hbpw2","updated":"20250204211448"},"Children":[{"Type":"NodeText","Data":"要用："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"__lg"},{"Type":"NodeText","Data":"​ （不规范，但是这是竞赛）/ "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"bit_width"},{"Type":"NodeText","Data":"​（C++20 可用）"}]}]}]}]}]},{"ID":"20250204214043-srf1v15","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204214043-srf1v15","updated":"20250204214450"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"gcd()"},{"Type":"NodeText","Data":"​ / "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lcm()"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250204214043-e6m5cbp","Type":"NodeParagraph","Properties":{"id":"20250204214043-e6m5cbp","updated":"20250204214043"},"Children":[{"Type":"NodeText","Data":"（C++17）返回最大公因数 / 最小公倍数"}]},{"ID":"20250204214043-9ikiw72","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204214043-9ikiw72","updated":"20250204214043"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"int x = gcd(8, 12); // 4\nint y = lcm(8, 12); // 24\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204214043-88cxig4","Type":"NodeParagraph","Properties":{"id":"20250204214043-88cxig4","updated":"20250204214043"},"Children":[{"Type":"NodeText","Data":"如果不是 C++17，但是是 GNU 编译器（g++），那么可以用内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"__gcd()"},{"Type":"NodeText","Data":"​."}]},{"ID":"20250204214043-30lzsas","Type":"NodeParagraph","Properties":{"id":"20250204214043-30lzsas","updated":"20250204214043"},"Children":[{"Type":"NodeText","Data":"当然，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"gcd"},{"Type":"NodeText","Data":"​ / "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lcm"},{"Type":"NodeText","Data":"​ 函数也挺好写，直接写也行（欧几里得算法）："}]},{"ID":"20250204214043-puvwf32","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204214043-puvwf32","updated":"20250204214043"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"int gcd(int a, int b)\n{\n    if (!b)\n        return a;\n    return gcd(b, a % b);\n}\n\nint lcm(int a, int b)\n{\n    return a / gcd(a, b) * b;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204214450-gutky1p","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204214450-gutky1p","updated":"20250204220218"},"Children":[{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lower_bound()"},{"Type":"NodeText","Data":"​ / "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"upper_bound()"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250204214450-5hfomtp","Type":"NodeParagraph","Properties":{"id":"20250204214450-5hfomtp","updated":"20250204214450"},"Children":[{"Type":"NodeText","Data":"在"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"已升序排序"},{"Type":"NodeText","Data":"的元素中，应用二分查找检索指定元素，返回对应元素迭代器位置。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"找不到则返回尾迭代器。"}]},{"ID":"20250204214450-63h30ki","Type":"NodeList","ListData":{},"Properties":{"id":"20250204214450-63h30ki","updated":"20250204214450"},"Children":[{"ID":"20250204214450-4dh3pkb","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204214450-4dh3pkb","updated":"20250204214450"},"Children":[{"ID":"20250204214450-8n8s0gn","Type":"NodeParagraph","Properties":{"id":"20250204214450-8n8s0gn","updated":"20250204214450"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lower_bound()"},{"Type":"NodeText","Data":"​: 寻找 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\geq x"},{"Type":"NodeText","Data":" 的第一个元素的位置"}]}]},{"ID":"20250204214450-ebx4ybu","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204214450-ebx4ybu","updated":"20250204214450"},"Children":[{"ID":"20250204214450-h6ktloa","Type":"NodeParagraph","Properties":{"id":"20250204214450-h6ktloa","updated":"20250204214450"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"upper_bound()"},{"Type":"NodeText","Data":"​: 寻找 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\u003ex"},{"Type":"NodeText","Data":" 的第一个元素的位置"}]}]}]},{"ID":"20250204214450-be3tgwa","Type":"NodeParagraph","Properties":{"id":"20250204214450-be3tgwa","updated":"20250204214450"},"Children":[{"Type":"NodeText","Data":"怎么找 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\leq x"},{"Type":"NodeText","Data":" / "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\u003c x"},{"Type":"NodeText","Data":" 的第一个元素呢？"}]},{"ID":"20250204214450-mhqr2n2","Type":"NodeList","ListData":{},"Properties":{"id":"20250204214450-mhqr2n2","updated":"20250204214450"},"Children":[{"ID":"20250204214450-sq1tdwf","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204214450-sq1tdwf","updated":"20250204214450"},"Children":[{"ID":"20250204214450-emctgcv","Type":"NodeParagraph","Properties":{"id":"20250204214450-emctgcv","updated":"20250204214450"},"Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\u003ex"},{"Type":"NodeText","Data":" 的第一个元素的前一个元素（如果有）便是 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\leq x"},{"Type":"NodeText","Data":" 的第一个元素"}]}]},{"ID":"20250204214450-w8tvfcm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250204214450-w8tvfcm","updated":"20250204214450"},"Children":[{"ID":"20250204214450-l8v211l","Type":"NodeParagraph","Properties":{"id":"20250204214450-l8v211l","updated":"20250204214450"},"Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\geq x"},{"Type":"NodeText","Data":" 的第一个元素的前一个元素（如果有）便是 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\u003cx"},{"Type":"NodeText","Data":" 的第一个元素"}]}]}]},{"ID":"20250204214450-ck9knpi","Type":"NodeParagraph","Properties":{"id":"20250204214450-ck9knpi","updated":"20250204214450"},"Children":[{"Type":"NodeText","Data":"返回的是迭代器，如何转成下标索引呢？减去头迭代器即可。"}]},{"ID":"20250204214450-bke8r4s","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204214450-bke8r4s","updated":"20250204220218"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"用法示例"}]},{"ID":"20250204214450-c1zznta","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204214450-c1zznta","updated":"20250204214450"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"template\u003c class ForwardIt, class T \u003e\nForwardIt lower_bound( ForwardIt first, ForwardIt last, const T\u0026 value );\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204214450-mm4rjby","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204214450-mm4rjby","updated":"20250204214450"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"vector\u003cint\u003e arr{0, 1, 1, 1, 8, 9, 9};\nidx = lower_bound(arr.begin(), arr.end(), 7) - arr.begin(); // 4\nidx = lower_bound(arr.begin(), arr.end(), 8) - arr.begin(); // 4\nidx = upper_bound(arr.begin(), arr.end(), 7) - arr.begin(); // 4\nidx = upper_bound(arr.begin(), arr.end(), 8) - arr.begin(); // 5\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204220218-i0q0z1h","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204220218-i0q0z1h","updated":"20250204220315"},"Children":[{"Type":"NodeText","Data":"swap()交换函数"}]},{"ID":"20250204220235-wgdmlnj","Type":"NodeParagraph","Properties":{"id":"20250204220235-wgdmlnj","updated":"20250204220257"},"Children":[{"Type":"NodeText","Data":"需要引入头文件"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#include\u0026lt;utility\u0026gt;"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250204220315-o01zsgm","Type":"NodeParagraph","Properties":{"id":"20250204220315-o01zsgm","updated":"20250204220315"},"Children":[{"Type":"NodeText","Data":"对于STL容器（如vector、string等），swap操作通常是非常高效的，因为它们只是交换内部指针"}]},{"ID":"20250204214535-zh1q3r4","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204214535-zh1q3r4","updated":"20250208185249"},"Children":[{"Type":"NodeText","Data":"随机快速排序quickSort"}]},{"ID":"20250204214542-muzvstc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250204214542-muzvstc","updated":"20250205215612"},"Children":[{"Type":"NodeText","Data":"代码模板"}]},{"ID":"20250204214558-un7dhw9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250204214558-un7dhw9","updated":"20250204222522"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003ciostream\u003e\n#include\u003cutility\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint n;\n\nvoid quickSort(int l,int r){\n    if(l\u003e=r){\n        return; // 只是结束函数的执行，不返回任何值\n    }\n    int x = arr[l];\n    int a = l,b = r;\n    int i = l;\n    while(i \u003c= b){\n        if(arr[i] \u003c x){\n            swap(arr[a],arr[i]);\n            a++;\n            i++;\n        }else if(arr[i] == x){\n            i++;\n        }else if(arr[i] \u003e x){\n            swap(arr[i],arr[b]);\n            b--;\n        }\n    }\n    int left = a,right = b;\n    quickSort(l,left-1);\n    quickSort(right+1,r);\n}\n\nint main()\n{\n    scanf(\"%d\",\u0026n);\n    for(int i = 0;i\u003cn;i++){\n        scanf(\"%d\",\u0026arr[i]);\n    }\n    quickSort(0,n-1);\n    for(int i = 0;i\u003cn;i++){\n        printf(\"%d \",arr[i]);\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250205215612-zth6uo5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250205215612-zth6uo5","updated":"20250208223921"},"Children":[{"Type":"NodeText","Data":"sort（）实现"}]},{"ID":"20250205215652-xb8ec4p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250205215652-xb8ec4p","updated":"20250208223921"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003ciostream\u003e\n#include\u003calgorithm\u003e\nusing namespace std;\n\nconst int N = 1e6+10;\nint arr[N];\nint n;\n\nint main()\n{\n    cin\u003e\u003en;\n    for(int i = 0;i\u003cn;i++){\n        scanf(\"%d\",\u0026arr[i]);\n    }\n    sort(arr,arr+n);\n    for(int i = 0;i\u003cn;i++){\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    }\n    cout\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250204222615-ajwiibh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250204222615-ajwiibh","updated":"20250205235814"},"Children":[{"Type":"NodeText","Data":"递归和master公式"}]},{"ID":"20250205214801-liyri0n","Type":"NodeParagraph","Properties":{"id":"20250205214801-liyri0n","updated":"20250205235814"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250205214801-qwbyxqn.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250205220940-rkfoj9q","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250205220940-rkfoj9q","updated":"20250205225023"},"Children":[{"Type":"NodeText","Data":"递归求最大值"}]},{"ID":"20250205220948-79ryozr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250205220948-79ryozr","updated":"20250205225023"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003ciostream\u003e\n#include\u003calgorithm\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint n;\n\nint f(int arr[],int l,int r){\t//时间复杂度为O(N)\n    if(l == r){\n        return arr[l];\n    }\n    int m = (l+r)/2;\n    int lmax = f(arr,l,m);\n    int rmax = f(arr,m+1,r);\n    return max(lmax,rmax);\n}\n\nint main()\n{\n    scanf(\"%d\",\u0026n);\n    for(int i = 0;i\u003cn;i++){\n        scanf(\"%d\",\u0026arr[i]);\n    }\n    cout\u003c\u003cf(arr,0,n-1)\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250205220954-h1ceh6w","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250205220954-h1ceh6w","updated":"20250208185242"},"Children":[{"Type":"NodeText","Data":"归并排序mergeSort"}]},{"ID":"20250206142805-inctgmf","Type":"NodeParagraph","Properties":{"id":"20250206142805-inctgmf","updated":"20250206220937"},"Children":[{"Type":"NodeText","Data":"根据master公式："}]},{"ID":"20250206142852-kw8wx1l","Type":"NodeParagraph","Properties":{"id":"20250206142852-kw8wx1l","updated":"20250206220937"},"Children":[{"Type":"NodeText","Data":"T(n) = 2*T(n/2) + O(n)"}]},{"ID":"20250206142840-hd1fud3","Type":"NodeParagraph","Properties":{"id":"20250206142840-hd1fud3","updated":"20250206220937"},"Children":[{"Type":"NodeText","Data":"a = 2,b = 2,c = 1"}]},{"ID":"20250206142853-gggpa00","Type":"NodeParagraph","Properties":{"id":"20250206142853-gggpa00","updated":"20250206220937"},"Children":[{"Type":"NodeText","Data":"时间复杂度为O(N*logN)，额外空间复杂度为O(N)"}]},{"ID":"20250205225032-q4nv256","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250205225032-q4nv256","updated":"20250206170342"},"Children":[{"Type":"NodeText","Data":"代码模板"}]},{"ID":"20250205234038-n9217i4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250205234038-n9217i4","updated":"20250205234042"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint help[N];\nint n;\n\nvoid mergeSort(int l,int r){\n    if(l == r){\n        return;\n    }\n    int m = (l+r)/2;\n    mergeSort(l,m);\n    mergeSort(m+1,r);\n\n    int a = l,b = m+1,i = l;\n    while(a\u003c=m\u0026\u0026b\u003c=r){\n        if(arr[a]\u003c=arr[b]){\n            help[i] = arr[a];\n            i++;\n            a++;\n        }else{\n            help[i] = arr[b];\n            i++;\n            b++;\n        }\n    }\n    while(a\u003c=m){\n        help[i] = arr[a];\n        i++;\n        a++;    //自增是为了跳出循环\n    }\n    while(b\u003c=r){\n        help[i] = arr[b];\n        i++;\n        b++;\n    }\n    for(i = l;i\u003c=r;i++){\n        arr[i] = help[i];\n    }\n}\n\nint main()\n{\n    scanf(\"%d\",\u0026n);\n    for(int i = 0;i\u003cn;i++){\n        scanf(\"%d\",\u0026arr[i]);\n    }\n    mergeSort(0,n-1);\n    for(int i = 0;i\u003cn;i++){\n        printf(\"%d \",arr[i]);\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250206170342-bjryqa5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250206170342-bjryqa5","updated":"20250206175630"},"Children":[{"Type":"NodeText","Data":"归并分治"}]},{"ID":"20250206175616-fj9r85p","Type":"NodeParagraph","Properties":{"id":"20250206175616-fj9r85p","updated":"20250206175630"},"Children":[{"Type":"NodeText","Data":"时间复杂度为O(N*logN)"}]},{"ID":"20250206170356-5oe74dj","Type":"NodeParagraph","Properties":{"id":"20250206170356-5oe74dj","updated":"20250206170356"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250206170356-8ryf62b.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250206154822-otepp8a","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250206154822-otepp8a","updated":"20250206154957"},"Children":[{"Type":"NodeText","Data":"归并分治求逆序对数量"}]},{"ID":"20250206154950-2k99ju7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250206154950-2k99ju7","updated":"20250206154957"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint help[N];\nint n;\n\nlong long mergeSort(int l,int r){\n    if(l == r){\n        return 0;  // 单个元素没有逆序对,结束函数的执行，返回0\n    }\n    int m = (l+r)/2;\n    // res 存储当前区间的总逆序对数 = 左半部分的逆序对 + 右半部分的逆序对 + 合并时产生的逆序对\n    long long res = mergeSort(l,m) + mergeSort(m+1,r);\n    int a = l,b = m+1,i = l;\n    while(a\u003c=m \u0026\u0026 b\u003c=r){\n        if(arr[a]\u003c=arr[b]){\n            help[i] = arr[a];\n            i++;\n            a++;\n        }else{\n            help[i] = arr[b];\n            i++;\n            b++;\n            // 当前右边的数比左边的数小时，左边剩余的所有数都能和右边的数构成逆序对\n            // m-a+1 表示左边剩余数字的个数\n            res += m-a+1;\n        }\n    }\n    while(a\u003c=m){\n        help[i] = arr[a];\n        i++;\n        a++;\n    }\n    while(b\u003c=r){\n        help[i] = arr[b];\n        i++;\n        b++;\n    }\n    for(i = l;i\u003c=r;i++){\n        arr[i] = help[i];\n    }\n    return res;\n}\n\nint main()\n{\n    scanf(\"%d\",\u0026n);\n    for(int i = 0;i\u003cn;i++){\n        scanf(\"%d\",\u0026arr[i]);\n    }\n    cout\u003c\u003cmergeSort(0,n-1)\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250206154842-7pecwfl","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250206154842-7pecwfl","updated":"20250206194458"},"Children":[{"Type":"NodeText","Data":"归并分治求小和问题"}]},{"ID":"20250206172242-aew97d1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250206172242-aew97d1","updated":"20250206175041"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint help[N];\nint n;\n\nlong long merge(int l,int r){\n    int m = (l+r)/2;\n    long long ans = 0,sum = 0;\n    for(int j = m+1,i = l;j\u003c=r;j++){\n        while(i\u003c=m\u0026\u0026arr[i]\u003c=arr[j]){\n            sum += arr[i];\n            i++;\n        }\n        ans += sum;\n    }\n    int a = l,b = m+1,i = l;\n    while(a\u003c=m \u0026\u0026 b\u003c=r){\n        if(arr[a]\u003c=arr[b]){\n            help[i] = arr[a];\n            i++;\n            a++;\n        }else{\n            help[i] = arr[b];\n            i++;\n            b++;\n        }\n    }\n     while(a\u003c=m){\n        help[i] = arr[a];\n        i++;\n        a++;\n    }\n    while(b\u003c=r){\n        help[i] = arr[b];\n        i++;\n        b++;\n    }\n    for(i = l;i\u003c=r;i++){\n        arr[i] = help[i];\n    }\n    return ans;\n}\n\nlong long smallSum(int l,int r){\n    if(l == r){\n        return 0;\n    }\n    int m = (l+r)/2;\n    return smallSum(l,m) + smallSum(m+1,r) + merge(l,r);\n}\n\nint main()\n{\n    scanf(\"%d\",\u0026n);\n    for(int i = 0;i\u003cn;i++){\n        scanf(\"%d\",\u0026arr[i]);\n    }\n    cout\u003c\u003csmallSum(0,n-1)\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250206194458-r70pr7q","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250206194458-r70pr7q","updated":"20250206201250"},"Children":[{"Type":"NodeText","Data":"归并分治求翻转对数量问题"}]},{"ID":"20250206194513-lx1fxqn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250206194513-lx1fxqn","updated":"20250206194648"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint help[N];\nint n;\n\nlong long merge(int l,int r){\n    int m = (l+r)/2;\n    //统计部分\n    int ans = 0;\n    for(int i = l,j = m+1;i\u003c=m;i++){\n        while(j\u003c=r\u0026\u0026arr[i]\u003earr[j]*2){\n            j++;\n        }\n        ans += j-(m+1);\n    }\n    int a = l,b = m+1,i = l;\n    while(a\u003c=m \u0026\u0026 b\u003c=r){\n        if(arr[a]\u003c=arr[b]){\n            help[i] = arr[a];\n            i++;\n            a++;\n        }else{\n            help[i] = arr[b];\n            i++;\n            b++;\n        }\n    }\n     while(a\u003c=m){\n        help[i] = arr[a];\n        i++;\n        a++;\n    }\n    while(b\u003c=r){\n        help[i] = arr[b];\n        i++;\n        b++;\n    }\n    for(i = l;i\u003c=r;i++){\n        arr[i] = help[i];\n    }\n    return ans;\n}\n\nlong long smallSum(int l,int r){\n    if(l == r){\n        return 0;\n    }\n    int m = (l+r)/2;\n    return smallSum(l,m) + smallSum(m+1,r) + merge(l,r);\n}\n\nint main()\n{\n    scanf(\"%d\",\u0026n);\n    for(int i = 0;i\u003cn;i++){\n        scanf(\"%d\",\u0026arr[i]);\n    }\n    cout\u003c\u003csmallSum(0,n-1)\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250206201250-wg6dnle","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250206201250-wg6dnle","updated":"20250206220857"},"Children":[{"Type":"NodeText","Data":"二分查找binary search"}]},{"ID":"20250206220848-9g8l627","Type":"NodeParagraph","Properties":{"id":"20250206220848-9g8l627","updated":"20250206220857"},"Children":[{"Type":"NodeText","Data":"时间复杂度为O(logN)"}]},{"ID":"20250206212517-4g2ppm7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250206212517-4g2ppm7","updated":"20250206220839"},"Children":[{"Type":"NodeText","Data":"无重复的二分搜索模板"}]},{"ID":"20250206212522-8n0ue8b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250206212522-8n0ue8b","updated":"20250206220839"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint n,x;\n\nint bsearch(int arr[],int n,int x){\n    int l = 0,r = n-1;\n    while(l\u003c=r){\n\t\tint m = l+(r-l)/2;\n        if(arr[m] == x) return m;\n        else if(arr[m] \u003e x)    r = m-1;\n        else    l = m+1;\n    }\n    return -1;\n}\n\nint main()\n{\n    scanf(\"%d\",\u0026n);\n    for(int i = 0;i\u003cn;i++){\n        scanf(\"%d\",\u0026arr[i]);\n    }\n    scanf(\"%d\",\u0026x);\n    cout\u003c\u003cbsearch(arr,n,x)\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250206212505-39vow6m","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250206212505-39vow6m","updated":"20250206215650"},"Children":[{"Type":"NodeText","Data":"有重复的二分搜索模板"}]},{"ID":"20250206201301-j7enyqm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250206201301-j7enyqm","updated":"20250206204057"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint n,q,x;\n\n// 查找第一个等于x的位置\nint bsearch_left(int arr[], int n, int x){\n    int l = 0, r = n-1;\n    while(l \u003c r){\n        int m = l + (r-l)/2;\t//防溢出\n        if(arr[m] \u003e= x) r = m;\n        else l = m + 1;\n    }\n    if(arr[l] != x) return -1;\n    return l;\n}\n\n// 查找最后一个等于x的位置\nint bsearch_right(int arr[], int n, int x){\n    int l = 0, r = n-1;\n    while(l \u003c r){\n        int m = l + (r-l+1)/2;\n        if(arr[m] \u003c= x) l = m;\n        else r = m - 1;\n    }\n    if(arr[l] != x) return -1;\n    return l;\n}\n\nint main()\n{\n    scanf(\"%d%d\",\u0026n,\u0026q);\n    for(int i = 0; i \u003c n; i++){\n        scanf(\"%d\",\u0026arr[i]);\n    }\n    while(q--){\n        scanf(\"%d\",\u0026x);\n        int left = bsearch_left(arr, n, x);\n        int right = bsearch_right(arr, n, x);\n        cout \u003c\u003c left \u003c\u003c \" \" \u003c\u003c right \u003c\u003c endl;\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250206215634-9dt4dfy","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250206215634-9dt4dfy","updated":"20250206215821"},"Children":[{"Type":"NodeText","Data":"二分搜索求数的三次方根"}]},{"ID":"20250206215657-oxi17te","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250206215657-oxi17te","updated":"20250206215818"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint main() {\n    double n;\n    cin \u003e\u003e n;\n    double l = -10000, r = 10000;  \n    //如果要保证k位小数的精度，则循环判断条件一般要比k再多2位\n    while (r - l \u003e 1e-8) {  \n        double mid = (l + r) / 2;\n        double cube = mid * mid * mid;\n        if (cube \u003e n) {\n            r = mid;\n        } else {\n            l = mid;\n        }\n    }\n\n    printf(\"%.6lf\\n\", l);  \n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250206215821-hzr3m9t","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250206215821-hzr3m9t","updated":"20250208192823"},"Children":[{"Type":"NodeText","Data":"一维前缀和"}]},{"ID":"20250206221829-sm0ap0b","Type":"NodeParagraph","Properties":{"id":"20250206221829-sm0ap0b","updated":"20250206221838"},"Children":[{"Type":"NodeText","Data":"时间复杂度为O(N)"}]},{"ID":"20250206221207-vhlcrfs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250206221207-vhlcrfs","updated":"20250208192823"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint s[N],a[N];\nint n,m;\nint l,r;\n\nint main()\n{\n    cin\u003e\u003en\u003e\u003em;\t//n为数组a的长度，m为询问次数\n    for(int i = 1;i\u003c=n;i++){\n        cin\u003e\u003ea[i];\n        s[i] = s[i-1] + a[i];\n    }\n    while(m--){\n        cin\u003e\u003el\u003e\u003er;\n        cout\u003c\u003cs[r]-s[l-1];\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250206221840-0eutxve","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250206221840-0eutxve","updated":"20250208192929"},"Children":[{"Type":"NodeText","Data":"一维差分"}]},{"ID":"20250206223755-chjn97z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250206223755-chjn97z","updated":"20250208192929"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint d[N],a[N];\nint n,m;\nint l,r,c;\n\nint main()\n{\n    cin\u003e\u003en\u003e\u003em;\t\t\t//n为数组a的长度，m为询问次数\n    for(int i = 1;i\u003c=n;i++){\n        cin\u003e\u003ea[i];\n        d[i] = a[i] - a[i-1];\n    }\n\n    while(m--){\n        cin\u003e\u003el\u003e\u003er\u003e\u003ec;\t// l 和 r 表示操作的区间 [l, r]，c 表示加的值\n        d[l] += c;\n        if(r+1\u003c=n){\t\t// 如果 r+1 没有越界\n            d[r+1] -= c;\n        }\n    }\n\n    for(int i = 1;i\u003c=n;i++){\n        a[i] = a[i-1] + d[i];\n    }\n    for(int i = 1;i\u003c=n;i++){\n        cout\u003c\u003ca[i]\u003c\u003c\" \";\n    }\n    cout\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250206223815-lm03fu2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250206223815-lm03fu2","updated":"20250208193035"},"Children":[{"Type":"NodeText","Data":"二维前缀和"}]},{"ID":"20250208184934-5dabafu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250208184934-5dabafu","updated":"20250208193035"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e9+100;\nint s[N][N],a[N][N];\nint n,m,q;\nint x1,x2,y1,y2;\n\nint main()\n{\n    cin\u003e\u003en\u003e\u003em\u003e\u003eq;\n    for(int i = 1;i\u003c=n;i++){\n        for(int j = 1;j\u003c=m;j++){\n            cin\u003e\u003ea[i][j];\n\t\t//sij包含了从矩阵左上角(1,1)位置到(i,j)位置形成的矩形区域内的所有元素之和\n            s[i][j] = s[i-1][j] + s[i][j-1] + a[i][j] - s[i-1][j-1];\n        }\n    }\n    while(q--){\n        cin\u003e\u003ex1,y1,x2,y2;\n\t\t//求从x1,y1到x2,y2的区域和\n        cout\u003c\u003cs[x2][y2] - s[x1-1][y2] - s[x2][y1-1] + s[x1-1][y1-1]\u003c\u003cendl;\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250208184942-4kspo7h","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250208184942-4kspo7h","updated":"20250208204251"},"Children":[{"Type":"NodeText","Data":"二维差分"}]},{"ID":"20250208185056-pylepol","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250208185056-pylepol","updated":"20250208203254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint a[N][N],d[N][N];\nint n,m,c;\nint x1,y1,x2,y2;\n\nint main()\n{\n    cin\u003e\u003en\u003e\u003em;\n    for(int i = 1;i\u003c=n;i++){\n        for(int j = 1;j\u003c=m;j++){\n            cin\u003e\u003ea[i][j];\n            d[i][j] = (a[i][j] - a[i-1][j]) - (a[i][j-1] - a[i-1][j-1]);\n        }\n    }\n\n    while(m--){\n        cin\u003e\u003ex1\u003e\u003ey1\u003e\u003ex2\u003e\u003ey2\u003e\u003ec;\n        d[x1][y1] += c;\n        d[x1][y2+1] -= c;\n        d[x2+1][y1] -= c;\n        d[x2+1][y2+1] += c;\n    }\n\n    for(int i = 1;i\u003c=n;i++){\n        for(int j = 1;j\u003c=m;j++){\n            a[i][j] = d[i][j] + a[i-1][j] + a[i][j-1] - a[i-1][j-1];\n            cout\u003c\u003ca[i][j]\u003c\u003c\" \";\n        }\n        cout\u003c\u003cendl;\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250208204251-7i6hlh2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250208204251-7i6hlh2","updated":"20250208225725"},"Children":[{"Type":"NodeText","Data":"双指针"}]},{"ID":"20250208225500-lumclv8","Type":"NodeParagraph","Properties":{"id":"20250208225500-lumclv8","updated":"20250208225500"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250208225500-x1kcjof.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250208204259-982lmqq","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250208204259-982lmqq","updated":"20250208225725"},"Children":[{"Type":"NodeText","Data":"奇偶数字归位"}]},{"ID":"20250208225502-erqevmz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250208225502-erqevmz","updated":"20250208225723"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint n;\n\nvoid sortArr(int arr[],int n){\n    int even = 0,odd = 1,x = n-1;   //x一直在n-1位置，对even和odd发货\n    while(even\u003cn\u0026\u0026odd\u003cn){\n        if(arr[x]%2 == 0){\n            swap(arr[even],arr[x]);\n            even += 2;\n        }else if(arr[x]%2 == 1){\n            swap(arr[odd],arr[x]);\n            odd += 2;\n        }\n    }\n    for(int i = 0;i\u003cn;i++){\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    }\n}\n\nint main()\n{\n    cin\u003e\u003en;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003earr[i];\n    }\n    sortArr(arr,n);\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250208225725-3jxbwwl","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250208225725-3jxbwwl","updated":"20250208225746"},"Children":[{"Type":"NodeText","Data":"寻找重复数"}]},{"ID":"20250208225739-papa3r0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250208225739-papa3r0","updated":"20250208225746"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint n;\n\nint findRepititon(int arr[]){\n    int slow = arr[0];      //慢指针跳一次\n    int fast = arr[arr[0]]; //快指针跳两次\n    while(slow != fast){\n        slow = arr[slow];\n        fast = arr[arr[fast]];\n    }\n    fast = 0;   //相遇一次快指针变为0\n    while(slow != fast){\n        slow = arr[slow];\n        fast = arr[fast];   //快指针跳一次\n    }\n    return slow;\n}\n\nint main()\n{\n    //定义数组长度为n，数值在1~n-1之间\n    cin\u003e\u003en;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003earr[i];\n    }\n    cout\u003c\u003cfindRepititon(arr)\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250208225745-kctqdmg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250208225745-kctqdmg","updated":"20250208225808"},"Children":[{"Type":"NodeText","Data":"接雨水"}]},{"ID":"20250208225755-w3ppwza","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250208225755-w3ppwza","updated":"20250208225801"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint n;\n\nint trap(int arr[],int n){\n    int l = 1,r = n-2,lmax = arr[0],rmax = arr[n-1];    //从两头往中间的指针\n    int ans = 0;\n    while(l\u003c=r){\n        if(lmax \u003c= rmax){\n            ans += max(0,lmax-arr[l]);\n            lmax = max(lmax,arr[l]);\n            l++;\n        }else{\n            ans += max(0,rmax-arr[r]);\n            rmax = max(rmax,arr[r]);\n            r--;\n        }\n    }\n    return ans;\n}\n\nint main(){\n    cin\u003e\u003en;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003earr[i];\n    }\n    cout\u003c\u003ctrap(arr,n)\u003c\u003cendl;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250208225803-o69f13v","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250208225803-o69f13v","updated":"20250209141448"},"Children":[{"Type":"NodeText","Data":"救生艇"}]},{"ID":"20250208225811-bivmw8h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250208225811-bivmw8h","updated":"20250208225818"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N];\nint n;\nint lim;    //最大承载数量\n\n//时间复杂度为O(N*logN)，空间复杂度为1\nint numBoats(int arr[],int n,int lim){\n    sort(arr,arr+n);    //排序\n    int l = 0,r = n-1;  //双指针\n    int sum = 0,ans = 0;\n    while(l\u003c=r){\n        if(l == r){\n            sum = arr[l];\n        }else{\n            sum = arr[l] + arr[r];\n        }\n        if(sum\u003c=lim){\n            l++;\n            r--;\n            ans++;\n        }else{\n            r--;\n            ans++;\n        }\n    }\n    return ans;\n}\n\nint main()\n{\n    //每艘船最多同时载两人\n    cin\u003e\u003en\u003e\u003elim;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003earr[i];\n    }\n    cout\u003c\u003cnumBoats(arr,n,lim)\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250208225857-lj0yvax","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250208225857-lj0yvax","updated":"20250209141715"},"Children":[{"Type":"NodeText","Data":"最长连续不重复子序列"}]},{"ID":"20250209141456-93lju6x","Type":"NodeList","ListData":{},"Properties":{"id":"20250209141456-93lju6x","updated":"20250209141601"},"Children":[{"ID":"20250209141456-laeyapv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250209141456-laeyapv","updated":"20250209141601"},"Children":[{"ID":"20250209141456-hmzjyi6","Type":"NodeParagraph","Properties":{"id":"20250209141456-hmzjyi6","updated":"20250209141601"},"Children":[{"Type":"NodeText","Data":"当 j = 0，处理 a[0] = 1："}]}]}]},{"ID":"20250209141456-vya69wf","Type":"NodeParagraph","Properties":{"id":"20250209141456-vya69wf","updated":"20250209141632"},"Children":[{"Type":"NodeText","Data":"count[1]++，count 数组变为 [0, 1, 0, 0, ...]。"}]},{"ID":"20250209141456-02utb8n","Type":"NodeParagraph","Properties":{"id":"20250209141456-02utb8n","updated":"20250209141633"},"Children":[{"Type":"NodeText","Data":"当前窗口 [1]，长度为 1，更新 ans = 1。"}]},{"ID":"20250209141632-ulgxg8j","Type":"NodeList","ListData":{},"Properties":{"id":"20250209141632-ulgxg8j","updated":"20250209141632"},"Children":[{"ID":"20250209141456-f77v2i3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250209141456-f77v2i3","updated":"20250209141456"},"Children":[{"ID":"20250209141456-hn14xba","Type":"NodeParagraph","Properties":{"id":"20250209141456-hn14xba","updated":"20250209141456"},"Children":[{"Type":"NodeText","Data":"当 j = 1，处理 a[1] = 2："}]}]}]},{"ID":"20250209141456-vr350y3","Type":"NodeParagraph","Properties":{"id":"20250209141456-vr350y3","updated":"20250209141635"},"Children":[{"Type":"NodeText","Data":"count[2]++，count 数组变为 [0, 1, 1, 0, ...]。"}]},{"ID":"20250209141456-fnel9p5","Type":"NodeParagraph","Properties":{"id":"20250209141456-fnel9p5","updated":"20250209141636"},"Children":[{"Type":"NodeText","Data":"当前窗口 [1, 2]，长度为 2，更新 ans = 2。"}]},{"ID":"20250209141635-piz3ebk","Type":"NodeList","ListData":{},"Properties":{"id":"20250209141635-piz3ebk","updated":"20250209141635"},"Children":[{"ID":"20250209141456-janzcyi","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250209141456-janzcyi","updated":"20250209141456"},"Children":[{"ID":"20250209141456-o7j4hjb","Type":"NodeParagraph","Properties":{"id":"20250209141456-o7j4hjb","updated":"20250209141456"},"Children":[{"Type":"NodeText","Data":"当 j = 2，处理 a[2] = 3："}]}]}]},{"ID":"20250209141456-1telkl7","Type":"NodeParagraph","Properties":{"id":"20250209141456-1telkl7","updated":"20250209141637"},"Children":[{"Type":"NodeText","Data":"count[3]++，count 数组变为 [0, 1, 1, 1, ...]。"}]},{"ID":"20250209141456-phnj0kd","Type":"NodeParagraph","Properties":{"id":"20250209141456-phnj0kd","updated":"20250209141637"},"Children":[{"Type":"NodeText","Data":"当前窗口 [1, 2, 3]，长度为 3，更新 ans = 3。"}]},{"ID":"20250209141637-z9adb1f","Type":"NodeList","ListData":{},"Properties":{"id":"20250209141637-z9adb1f","updated":"20250209141637"},"Children":[{"ID":"20250209141456-wlf41xv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250209141456-wlf41xv","updated":"20250209141456"},"Children":[{"ID":"20250209141456-jrheg3n","Type":"NodeParagraph","Properties":{"id":"20250209141456-jrheg3n","updated":"20250209141456"},"Children":[{"Type":"NodeText","Data":"当 j = 3，处理 a[3] = 2："}]}]}]},{"ID":"20250209141456-5qug8vg","Type":"NodeParagraph","Properties":{"id":"20250209141456-5qug8vg","updated":"20250209141639"},"Children":[{"Type":"NodeText","Data":"count[2]++，count 数组变为 [0, 1, 2, 1, ...]。"}]},{"ID":"20250209141456-08rgbre","Type":"NodeParagraph","Properties":{"id":"20250209141456-08rgbre","updated":"20250209141639"},"Children":[{"Type":"NodeText","Data":"现在 count[2] \u003e 1，表示数字 2 重复了。"}]},{"ID":"20250209141456-wmin9cf","Type":"NodeParagraph","Properties":{"id":"20250209141456-wmin9cf","updated":"20250209141644"},"Children":[{"Type":"NodeText","Data":"进入 while 循环，开始移动左指针 i："}]},{"ID":"20250209141456-eulxlmw","Type":"NodeParagraph","Properties":{"id":"20250209141456-eulxlmw","updated":"20250209141641"},"Children":[{"Type":"NodeText","Data":"count[1]--，i 增加到 1，count 变为 [0, 0, 2, 1, ...]。"}]},{"ID":"20250209141456-uqr4zfg","Type":"NodeParagraph","Properties":{"id":"20250209141456-uqr4zfg","updated":"20250209141641"},"Children":[{"Type":"NodeText","Data":"count[2]--，i 增加到 2，count 变为 [0, 0, 1, 1, ...]。"}]},{"ID":"20250209141456-81pjjf5","Type":"NodeParagraph","Properties":{"id":"20250209141456-81pjjf5","updated":"20250209141648"},"Children":[{"Type":"NodeText","Data":"当前窗口 [3, 2]，长度为 2，ans 不变。"}]},{"ID":"20250209141647-v9eewv5","Type":"NodeList","ListData":{},"Properties":{"id":"20250209141647-v9eewv5","updated":"20250209141647"},"Children":[{"ID":"20250209141456-ye24eap","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250209141456-ye24eap","updated":"20250209141456"},"Children":[{"ID":"20250209141456-eb8ordn","Type":"NodeParagraph","Properties":{"id":"20250209141456-eb8ordn","updated":"20250209141456"},"Children":[{"Type":"NodeText","Data":"当 j = 4，处理 a[4] = 5："}]}]}]},{"ID":"20250209141456-a87gemt","Type":"NodeParagraph","Properties":{"id":"20250209141456-a87gemt","updated":"20250209141649"},"Children":[{"Type":"NodeText","Data":"count[5]++，count 数组变为 [0, 0, 1, 1, 1, ...]。"}]},{"ID":"20250209141456-b4jk5je","Type":"NodeParagraph","Properties":{"id":"20250209141456-b4jk5je","updated":"20250209141650"},"Children":[{"Type":"NodeText","Data":"当前窗口 [3, 2, 5]，长度为 3，ans 不变。"}]},{"ID":"20250209141650-8opxc9s","Type":"NodeList","ListData":{},"Properties":{"id":"20250209141650-8opxc9s","updated":"20250209141650"},"Children":[{"ID":"20250209141456-s9wvnx5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250209141456-s9wvnx5","updated":"20250209141650"},"Children":[{"ID":"20250209141456-t41svxx","Type":"NodeParagraph","Properties":{"id":"20250209141456-t41svxx","updated":"20250209141456"},"Children":[{"Type":"NodeText","Data":"遍历结束后，ans 的值为 3，表示最长的无重复数字的子数组长度为 3，例如 [1, 2, 3] 或 [2, 3, 5]。"}]}]}]},{"ID":"20250209141714-da0e1qh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250209141714-da0e1qh","updated":"20250209141714"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N],cnt[N];\nint n;\n\nint main()\n{\n    cin\u003e\u003en;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003earr[i];\n    }\n    int ans = 0;\n    for(int i = 0,j = 0;j\u003cn;j++){\n        cnt[arr[j]]++;\n        while(cnt[arr[j]]\u003e1){\n            cnt[arr[i]]--;\n            i++;\n        }\n        ans = max(ans,j-i+1);\n    }\n    cout\u003c\u003cans\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250209141715-w4lm8t1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250209141715-w4lm8t1","updated":"20250209141852"},"Children":[{"Type":"NodeText","Data":"数组元素的目标和"}]},{"ID":"20250209141851-7ddlsua","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250209141851-7ddlsua","updated":"20250209141851"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint a[N],b[N];\nint n,m,x;\n\nint main()\n{\n    cin\u003e\u003en\u003e\u003em\u003e\u003ex;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003ea[i];  //升序\n    }\n    for(int i = 0;i\u003cm;i++){\n        cin\u003e\u003eb[i];  //升序\n    }\n    int j = 0,i = m-1;\n    while(j\u003cn\u0026\u0026i\u003e=0){\n        if(a[j]+b[i] == x){\n            cout\u003c\u003cj\u003c\u003c\" \"\u003c\u003ci;\n            return 0;\n        }else if(a[j]+b[i] \u003e x){    //偏大则右指针左移\n            i--;\n        }else if(a[j]+b[i] \u003c x){    //偏小则左指针右移\n            j++;\n        }\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250209141852-qwfwv42","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250209141852-qwfwv42","updated":"20250219193102"},"Children":[{"Type":"NodeText","Data":"判断子序列"}]},{"ID":"20250209141935-47zc8fy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250209141935-47zc8fy","updated":"20250209141935"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint a[N],b[N];\nint n,m;\n\nint main()\n{\n    cin\u003e\u003en\u003e\u003em;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003ea[i];\n    }\n    for(int i = 0;i\u003cm;i++){\n        cin\u003e\u003eb[i];\n    }\n\n    int i = 0,j = 0;    //同向双指针\n    int num = 0;\n    while(i\u003cn\u0026\u0026j\u003cm){\n        if(a[i] == b[j]){\n            i++;\n            j++;\n            num += 1;\n        }else{\n            j++;\n        }\n    }\n    if(num == n){\n        cout\u003c\u003c\"Yes\"\u003c\u003cendl;\n    }else{\n        cout\u003c\u003c\"No\"\u003c\u003cendl;\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250219193102-ysauimk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250219193102-ysauimk","updated":"20250222214319"},"Children":[{"Type":"NodeText","Data":"单链表"}]},{"ID":"20250219193117-103uzm8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250219193117-103uzm8","updated":"20250219193301"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint e[N],ne[N];\t//e[i] 表示节点i的值，ne[i] 表示节点i的next指针是多少\nint head,idx;\t//head 表示头结点的下标，idx 存储当前已经用到了哪个点\n\n//初始化\nvoid init(){\n    head = -1;\n    idx = 0;\n}\n\n//将x插到头结点\nvoid addToHead(int x){\n    e[idx] = x;\n    ne[idx] = head;\n    head = idx;\n    idx++;\n}\n\n//将x插到下标是k的点后面\nvoid add(int k,int x){\n    e[idx] = x;\n    ne[idx] = ne[k];\n    ne[k] = idx;\n    idx++;\n}\n\n//将下标是k的点后面的点删掉\nvoid remove(int k){\n    ne[k] = ne[ne[k]];\n}\n\nint main()\n{\n    int m;\n    cin\u003e\u003em;\n    init();\n\n    while(m--){\n        int k,x;\n        char op;\n        cin\u003e\u003eop;\n        if(op == 'H'){\n            cin\u003e\u003ex;\n            addToHead(x);\n        }else if(op == 'D'){\n            cin\u003e\u003ek;\n            if(k == 0)  head = ne[head];\n            remove(k-1);\n        }else if(op == 'I'){\n            cin\u003e\u003ek\u003e\u003ex;\n            add(k-1,x);\n        }\n    }\n\n    for(int i = head;i!=-1;i = ne[i]){\n        cout\u003c\u003ce[i]\u003c\u003c\" \";\n    }\n    cout\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250222214311-dothv8d","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250222214311-dothv8d","updated":"20250222221809"},"Children":[{"Type":"NodeText","Data":"双链表"}]},{"ID":"20250222214328-jdejs3p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250222214328-jdejs3p","updated":"20250222214328"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint e[N],l[N],r[N];\nint idx,m;\n\n//初始化，导致第k个插入的元素的索引为k+1\nvoid init(){\n    r[0] = 1;\n    l[1] = 0;\n    idx = 2;\n}\n\n//在下标是k的点的右边插入x,对应第k-1个插入元素右侧插入x\nvoid add(int k,int x){\n    e[idx] = x;\n    r[idx] = r[k];\n    l[idx] = k;\n    l[r[k]] = idx;\n    r[k] = idx;\n    idx++;\n}\n\n//删除第k个点，对应删除第k-1个插入元素\nvoid remove(int k){\n    r[l[k]] = r[k];\n    l[r[k]] = l[k];\n}\n\nint main()\n{\n    cin\u003e\u003em;\n    init(); //调用初始化！\n    while(m--){\n        int k,x;\n        string op;\n        cin\u003e\u003eop;\n        if(op == \"L\"){\n            cin\u003e\u003ex;\n            add(0,x);\n        }else if(op == \"R\"){\n            cin\u003e\u003ex;\n            add(l[1],x);\n        }else if(op == \"D\"){\n            cin\u003e\u003ek;\n            remove(k+1);    //第 k 个插入元素对应的索引为 k + 1\n        }else if(op == \"IL\"){\n            cin\u003e\u003ek\u003e\u003ex;\n            add(l[k+1],x);\n        }else if(op == \"IR\"){\n            cin\u003e\u003ek\u003e\u003ex;\n            add(k+1,x);\n        }\n    }\n    for(int i = r[0];i != 1;i = r[i]){\n        cout\u003c\u003ce[i]\u003c\u003c\" \";\n    }\n    cout\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250222221809-p1fb20t","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250222221809-p1fb20t","updated":"20250222221832"},"Children":[{"Type":"NodeText","Data":"栈"}]},{"ID":"20250222221819-kmcg44n","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250222221819-kmcg44n","updated":"20250222221832"},"Children":[{"Type":"NodeText","Data":"模拟栈"}]},{"ID":"20250222221832-d99ey42","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250222221832-d99ey42","updated":"20250222221832"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nstack \u003cint\u003e s;\nint m,x;\n\nint main()\n{\n    cin\u003e\u003em;\n    while(m--){\n        string op;\n        cin\u003e\u003eop;\n        if(op == \"push\"){\n            cin\u003e\u003ex;\n            s.push(x);\n        }else if(op == \"pop\"){\n            s.pop();\n        }else if(op == \"empty\"){\n            if(s.empty() == 1)   cout\u003c\u003c\"YES\"\u003c\u003cendl;\n            else    cout\u003c\u003c\"NO\"\u003c\u003cendl;\n        }else if(op == \"query\"){\n            cout\u003c\u003cs.top()\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250222221832-dogsmrg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250222221832-dogsmrg","updated":"20250224213542"},"Children":[{"Type":"NodeText","Data":"表达式求值（中序遍历）"}]},{"ID":"20250222230455-8m38t1b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250222230455-8m38t1b","updated":"20250223211314"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nstack \u003cint\u003e num;\nstack\u003cchar\u003e op;\n\n//从 num 栈中取出两个数字 a 和 b\n//从 op 栈中取出一个运算符 c\n//根据运算符 c 进行相应的运算，并将结果 x 压入 num 栈中\nvoid eval(){\n    auto b = num.top(); num.pop();\n    auto a = num.top(); num.pop();\n    auto c = op.top();  op.pop();\n    int x;\n    if(c =='+') x = a + b;\n    else if(c == '-')   x = a - b;\n    else if(c == '*')   x = a * b;\n    else    x = a / b;\n    num.push(x);\n}\n\nint main()\n{\n    //用于存储运算符的优先级\n    unordered_map\u003cchar,int\u003e pr{{'+',1},{'-',1},{'*',2},{'/',2}};\n    //读取用户输入的表达式，存储在字符串 str 中\n    string str;\n    cin\u003e\u003estr;\n\n    for(int i = 0;i\u003cstr.size();i++){\n        auto c = str[i];\n        //使用 x 存储这个数字，可能是多位数（例如 123）\n        //通过循环将所有连续的数字组合成一个整数，并将其压入 num 栈中\n        if(isdigit(c)){\n            int x = 0,j = i;\n            while(j\u003cstr.size()\u0026\u0026isdigit(str[j])){\n                x = x*10 + str[j] - '0';    //变为整型\n                j++;\n            }\n            i = j-1;\n            num.push(x);\n        }else if(c == '('){\n            op.push(c);\n        }else if(c == ')'){     //如果当前字符是右括号 )，则不断调用 eval 函数，直到遇到对应的左括号 (，然后将左括号弹出\n            while(op.top() != '('){ //确保所有在括号内的运算都被计算出来。只有在遇到 ( 时，才停止计算\n                eval();\n            }\n            op.pop();\n        }else{\n            while(op.size()\u0026\u0026pr[op.top()]\u003e=pr[c]){  //判断优先级\n                eval();   \n            }\n            op.push(c);\n        }\n    }\n    //在遍历完字符串后，可能还有未计算的运算符，继续调用 eval 进行计算\n    while(op.size()){\n        eval();\n    }\n    cout\u003c\u003cnum.top()\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250223211317-qt67fp0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250223211317-qt67fp0","updated":"20250224220636"},"Children":[{"Type":"NodeText","Data":"单调栈"}]},{"ID":"20250223211327-5tv02o3","Type":"NodeParagraph","Properties":{"id":"20250223211327-5tv02o3","updated":"20250223211327"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250223211327-aicexlx.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250223214928-hcr02w0","Type":"NodeParagraph","Properties":{"id":"20250223214928-hcr02w0","updated":"20250223214944"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输入解析"}]},{"ID":"20250223214928-rlgso3w","Type":"NodeList","ListData":{},"Properties":{"id":"20250223214928-rlgso3w","updated":"20250223214928"},"Children":[{"ID":"20250223214928-gtgblf6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-gtgblf6","updated":"20250223214928"},"Children":[{"ID":"20250223214928-y7tg6fs","Type":"NodeParagraph","Properties":{"id":"20250223214928-y7tg6fs","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"N = 5：表示数列的长度。"}]}]},{"ID":"20250223214928-oo01843","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-oo01843","updated":"20250223214928"},"Children":[{"ID":"20250223214928-h3o8064","Type":"NodeParagraph","Properties":{"id":"20250223214928-h3o8064","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"数列 = [3, 4, 2, 7, 5]。"}]}]}]},{"ID":"20250223214928-8f4xk7l","Type":"NodeParagraph","Properties":{"id":"20250223214928-8f4xk7l","updated":"20250223214953"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"代码执行步骤"}]},{"ID":"20250223214928-7xodq9x","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250223214928-7xodq9x","updated":"20250223214928"},"Children":[{"ID":"20250223214928-16liv20","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250223214928-16liv20","updated":"20250223214928"},"Children":[{"ID":"20250223214928-p7a4liq","Type":"NodeParagraph","Properties":{"id":"20250223214928-p7a4liq","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"初始化："}]}]}]},{"ID":"20250223214928-zbyy1td","Type":"NodeList","ListData":{},"Properties":{"id":"20250223214928-zbyy1td","updated":"20250223214928"},"Children":[{"ID":"20250223214928-lzdslxm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-lzdslxm","updated":"20250223214928"},"Children":[{"ID":"20250223214928-p24m18w","Type":"NodeParagraph","Properties":{"id":"20250223214928-p24m18w","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"nums 向量存储输入的数列：nums = [3, 4, 2, 7, 5]"}]}]},{"ID":"20250223214928-6d3ieer","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-6d3ieer","updated":"20250223214928"},"Children":[{"ID":"20250223214928-69godg8","Type":"NodeParagraph","Properties":{"id":"20250223214928-69godg8","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"result 向量用于存储每个数左边第一个比它小的数，初始为空。"}]}]},{"ID":"20250223214928-rhu8plm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-rhu8plm","updated":"20250223214928"},"Children":[{"ID":"20250223214928-ls8nfi9","Type":"NodeParagraph","Properties":{"id":"20250223214928-ls8nfi9","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"s 是一个空栈。"}]}]}]},{"ID":"20250223214928-bc0u0t5","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250223214928-bc0u0t5","updated":"20250223214928"},"Children":[{"ID":"20250223214928-kce16hm","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250223214928-kce16hm","updated":"20250223214928"},"Children":[{"ID":"20250223214928-e3z52j7","Type":"NodeParagraph","Properties":{"id":"20250223214928-e3z52j7","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"遍历数列："}]}]}]},{"ID":"20250223214928-auknxwz","Type":"NodeList","ListData":{},"Properties":{"id":"20250223214928-auknxwz","updated":"20250223215117"},"Children":[{"ID":"20250223214928-rbg9y47","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-rbg9y47","updated":"20250223215026"},"Children":[{"ID":"20250223214928-romg5wt","Type":"NodeParagraph","Properties":{"id":"20250223214928-romg5wt","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"第 0 个元素 (3)："}]},{"ID":"20250223215016-d997b59","Type":"NodeList","ListData":{},"Properties":{"id":"20250223215016-d997b59","updated":"20250223215026"},"Children":[{"ID":"20250223214928-wh958dt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-wh958dt","updated":"20250223215016"},"Children":[{"ID":"20250223214928-2l4eslx","Type":"NodeParagraph","Properties":{"id":"20250223214928-2l4eslx","updated":"20250223215006"},"Children":[{"Type":"NodeText","Data":"栈 s 为空，直接将 result[0] 设为 -1。"}]}]},{"ID":"20250223214928-otched8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-otched8","updated":"20250223215026"},"Children":[{"ID":"20250223214928-wxchkuj","Type":"NodeParagraph","Properties":{"id":"20250223214928-wxchkuj","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"将 3 压入栈中，栈现在是 [3]。"}]}]}]}]},{"ID":"20250223214928-ehar43i","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-ehar43i","updated":"20250223215033"},"Children":[{"ID":"20250223214928-wcgv45v","Type":"NodeParagraph","Properties":{"id":"20250223214928-wcgv45v","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"第 1 个元素 (4)："}]},{"ID":"20250223215029-74dk0mn","Type":"NodeList","ListData":{},"Properties":{"id":"20250223215029-74dk0mn","updated":"20250223215033"},"Children":[{"ID":"20250223214928-q4izi6w","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-q4izi6w","updated":"20250223215030"},"Children":[{"ID":"20250223214928-dj150p3","Type":"NodeParagraph","Properties":{"id":"20250223214928-dj150p3","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"栈顶元素是 3，3 \u003c 4，所以 result[1] 设为 3。"}]}]},{"ID":"20250223214928-ldcs4p6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-ldcs4p6","updated":"20250223215033"},"Children":[{"ID":"20250223214928-ivzc88e","Type":"NodeParagraph","Properties":{"id":"20250223214928-ivzc88e","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"将 4 压入栈中，栈现在是 [3, 4]。"}]}]}]}]},{"ID":"20250223214928-k4pinrr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-k4pinrr","updated":"20250223215049"},"Children":[{"ID":"20250223214928-ep4c0u8","Type":"NodeParagraph","Properties":{"id":"20250223214928-ep4c0u8","updated":"20250223215039"},"Children":[{"Type":"NodeText","Data":"第 2 个元素 (2)："}]},{"ID":"20250223215041-y5oaedr","Type":"NodeList","ListData":{},"Properties":{"id":"20250223215041-y5oaedr","updated":"20250223215049"},"Children":[{"ID":"20250223214928-8m04bz1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-8m04bz1","updated":"20250223215041"},"Children":[{"ID":"20250223214928-rxd5ci7","Type":"NodeParagraph","Properties":{"id":"20250223214928-rxd5ci7","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"栈顶元素是 4，4 \u003e= 2，弹出 4。"}]}]},{"ID":"20250223214928-ev5gubx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-ev5gubx","updated":"20250223215043"},"Children":[{"ID":"20250223214928-qaov7ek","Type":"NodeParagraph","Properties":{"id":"20250223214928-qaov7ek","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"栈顶元素是 3，3 \u003e= 2，弹出 3。"}]}]},{"ID":"20250223214928-khkxobi","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-khkxobi","updated":"20250223215046"},"Children":[{"ID":"20250223214928-xvc7326","Type":"NodeParagraph","Properties":{"id":"20250223214928-xvc7326","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"栈现在为空，result[2] 设为 -1。"}]}]},{"ID":"20250223214928-l0d0n8s","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-l0d0n8s","updated":"20250223215049"},"Children":[{"ID":"20250223214928-40esay2","Type":"NodeParagraph","Properties":{"id":"20250223214928-40esay2","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"将 2 压入栈中，栈现在是 [2]。"}]}]}]}]},{"ID":"20250223214928-89cbjrc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-89cbjrc","updated":"20250223215101"},"Children":[{"ID":"20250223214928-ko0ipxm","Type":"NodeParagraph","Properties":{"id":"20250223214928-ko0ipxm","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"第 3 个元素 (7)："}]},{"ID":"20250223215054-wgsfmn5","Type":"NodeList","ListData":{},"Properties":{"id":"20250223215054-wgsfmn5","updated":"20250223215101"},"Children":[{"ID":"20250223214928-qqi2bz5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-qqi2bz5","updated":"20250223215059"},"Children":[{"ID":"20250223214928-7qb0iru","Type":"NodeParagraph","Properties":{"id":"20250223214928-7qb0iru","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"栈顶元素是 2，2 \u003c 7，所以 result[3] 设为 2。"}]}]},{"ID":"20250223214928-tencoqw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-tencoqw","updated":"20250223215101"},"Children":[{"ID":"20250223214928-qkqr1i6","Type":"NodeParagraph","Properties":{"id":"20250223214928-qkqr1i6","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"将 7 压入栈中，栈现在是 [2, 7]。"}]}]}]}]},{"ID":"20250223214928-wvbzn22","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-wvbzn22","updated":"20250223215117"},"Children":[{"ID":"20250223214928-7k9n37h","Type":"NodeParagraph","Properties":{"id":"20250223214928-7k9n37h","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"第 4 个元素 (5)："}]},{"ID":"20250223215108-bc49zwr","Type":"NodeList","ListData":{},"Properties":{"id":"20250223215108-bc49zwr","updated":"20250223215117"},"Children":[{"ID":"20250223214928-s5aj3q2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-s5aj3q2","updated":"20250223215111"},"Children":[{"ID":"20250223214928-a9cq1mp","Type":"NodeParagraph","Properties":{"id":"20250223214928-a9cq1mp","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"栈顶元素是 7，7 \u003e= 5，弹出 7。"}]}]},{"ID":"20250223214928-4j63iqm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-4j63iqm","updated":"20250223215115"},"Children":[{"ID":"20250223214928-5gep2so","Type":"NodeParagraph","Properties":{"id":"20250223214928-5gep2so","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"栈顶元素是 2，2 \u003c 5，所以 result[4] 设为 2。"}]}]},{"ID":"20250223214928-wfcfgr9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250223214928-wfcfgr9","updated":"20250223215117"},"Children":[{"ID":"20250223214928-xvorqgx","Type":"NodeParagraph","Properties":{"id":"20250223214928-xvorqgx","updated":"20250223214928"},"Children":[{"Type":"NodeText","Data":"将 5 压入栈中，栈现在是 [2, 5]。"}]}]}]}]}]},{"ID":"20250223214928-fwjta2f","Type":"NodeParagraph","Properties":{"id":"20250223214928-fwjta2f","updated":"20250223215133"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"最终结果"}]},{"ID":"20250223214928-fkp0ari","Type":"NodeParagraph","Properties":{"id":"20250223214928-fkp0ari","updated":"20250223215232"},"Children":[{"Type":"NodeText","Data":"经过上述步骤，result 向量的内容为 [-1, 3, -1, 2, 2]"}]},{"ID":"20250223215222-4h81p5t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250223215222-4h81p5t","updated":"20250224220636"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint n, x;\nstack\u003cint\u003e s;\nint result[N];\n//处理左边最近的比当前数小的数\nint main() {\n    cin \u003e\u003e n;\n    for (int i = 0; i \u003c n; i++) {\n        cin \u003e\u003e x;\n\n        // 保证从小到大，单调递增\n        while (!s.empty() \u0026\u0026 s.top() \u003e= x) {\n            s.pop();\n        }\n\n        // 如果栈为空，说明没有比当前元素小的元素\n        if (s.empty()) {\n            result[i] = -1;\n        } else {\n            result[i] = s.top();\n        }\n\n        // 将当前元素压入栈中\n        s.push(x);\n    }\n\n    for (int i = 0; i \u003c n; i++) {\n        cout \u003c\u003c result[i] \u003c\u003c \" \";\n    }\n    cout \u003c\u003c endl;\n\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250223155108-ux3o8tk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250223155108-ux3o8tk","updated":"20250223211300"},"Children":[{"Type":"NodeText","Data":"队列"}]},{"ID":"20250223155132-rfu4j7u","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250223155132-rfu4j7u","updated":"20250223211300"},"Children":[{"Type":"NodeText","Data":"模拟队列"}]},{"ID":"20250223155127-gk6lu3j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250223155127-gk6lu3j","updated":"20250223155127"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint arr[N],cnt[N];\nint n;\n\nint main()\n{\n    cin\u003e\u003en;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003earr[i];\n    }\n    int ans = 0;\n    for(int i = 0,j = 0;j\u003cn;j++){\n        cnt[arr[j]]++;\n        while(cnt[arr[j]]\u003e1){\n            cnt[arr[i]]--;\n            i++;\n        }\n        ans = max(ans,j-i+1);\n    }\n    cout\u003c\u003cans\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250223211300-3au5i5h","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250223211300-3au5i5h","updated":"20250225130810"},"Children":[{"Type":"NodeText","Data":"单调队列"}]},{"ID":"20250224220655-h0d1b4w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250224220655-h0d1b4w","updated":"20250225130807"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e6 + 10;\nint n, k;\nint a[N];\ndeque\u003cint\u003e q;\n\nint main() {\n    cin \u003e\u003e n \u003e\u003e k;\n    for (int i = 0; i \u003c n; i++) cin \u003e\u003e a[i];\n\n    // 求最小值：维护单调递增队列\n    for (int i = 0; i \u003c n; i++) {\n        // 移除不在窗口内的队首元素\n        if (!q.empty() \u0026\u0026 q.front() \u003c i - k + 1) q.pop_front();\n        // 维护单调递增：移除队尾大于等于当前元素的值\n        while (!q.empty() \u0026\u0026 a[q.back()] \u003e= a[i]) q.pop_back();\n      \n        q.push_back(i);\n        if (i \u003e= k - 1) cout \u003c\u003c a[q.front()] \u003c\u003c \" \";\n    }\n    cout \u003c\u003c endl;\n\n    q.clear(); // 清空队列\n\n    // 求最大值：维护单调递减队列\n    for (int i = 0; i \u003c n; i++) {\n        // 移除不在窗口内的队首元素\n        if (!q.empty() \u0026\u0026 q.front() \u003c i - k + 1) q.pop_front();\n        // 维护单调递减：移除队尾小于等于当前元素的值\n        while (!q.empty() \u0026\u0026 a[q.back()] \u003c= a[i]) q.pop_back();\n      \n        q.push_back(i);\n        if (i \u003e= k - 1) cout \u003c\u003c a[q.front()] \u003c\u003c \" \";\n    }\n    cout \u003c\u003c endl;\n\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250225130810-b1hacrk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250225130810-b1hacrk","updated":"20250305223241"},"Children":[{"Type":"NodeText","Data":"KMP"}]},{"ID":"20250305223241-bkdeb01","Type":"NodeParagraph","Properties":{"id":"20250305223241-bkdeb01","updated":"20250305223241"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250305223241-gzngy2k.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250305214435-asr86wt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250305214435-asr86wt","updated":"20250305214440"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include \u003ciostream\u003e\nusing namespace std;\nconst int N = 100100, M = 1000010;\nint n, m;\nint ne[N];\nchar s[M], p[N]; // s：主串，p：模式串\n\nvoid get_next() {\n    for (int i = 2, j = 0; i \u003c= n; i++) {\n        while (j \u0026\u0026 p[i] != p[j + 1]){\n            j = ne[j];  // 如果 p[i]与 p[j+1]不匹配，就回退 j 到 ne[j]，直到找到合适的 j 或者 j 回退到 0\n        }\n        if (p[i] == p[j + 1]){\n            j++;\n            ne[i] = j;\n        }\n    }\n}\n\nvoid kmp() {\n    for (int i = 1, j = 0; i \u003c= m; i++) {\n        while (j \u0026\u0026 s[i] != p[j + 1]){\n            j = ne[j];  // 回退至上一个可能的匹配位置\n        }\n        if (s[i] == p[j + 1]){\n            j++;\n        }\n        if (j == n) {\n            printf(\"%d \", i - n);\n            j = ne[j];\n        }\n    }\n}\nint main()\n{\n    cin \u003e\u003e n \u003e\u003e (p + 1) \u003e\u003e m \u003e\u003e (s + 1);    //从 p+1 开始存储，即 p[1] 为模式串的第一个字符\n    get_next();\n    kmp();\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250305214448-7nf0hib","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250305214448-7nf0hib","updated":"20250319213725"},"Children":[{"Type":"NodeText","Data":"并查集"}]},{"ID":"20250305224429-x9u4rkf","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250305224429-x9u4rkf","updated":"20250319213725"},"Children":[{"Type":"NodeText","Data":"合并集合"}]},{"ID":"20250305220330-xzzbzuh","Type":"NodeParagraph","Properties":{"id":"20250305220330-xzzbzuh","updated":"20250305220330"},"Children":[{"Type":"NodeText","Data":"开始时每个集合都是一个独立的集合,并且都是等于自己本身下标的数"}]},{"ID":"20250305220345-6k16m3g","Type":"NodeParagraph","Properties":{"id":"20250305220345-6k16m3g","updated":"20250305220345"},"Children":[{"Type":"NodeText","Data":"例如:"}]},{"ID":"20250305220346-gu4o2l8","Type":"NodeParagraph","Properties":{"id":"20250305220346-gu4o2l8","updated":"20250305220346"},"Children":[{"Type":"NodeText","Data":"p[5]=5,p[3]=3;"}]},{"ID":"20250305220348-t244nzk","Type":"NodeParagraph","Properties":{"id":"20250305220348-t244nzk","updated":"20250305220348"},"Children":[{"Type":"NodeText","Data":"如果是M操作的话那么就将集合进行合并,合并的操作是:"}]},{"ID":"20250305220341-kk6kx5i","Type":"NodeParagraph","Properties":{"id":"20250305220341-kk6kx5i","updated":"20250305220341"},"Children":[{"Type":"NodeText","Data":"p[3]=p[5]=5;"}]},{"ID":"20250305220350-trul9c0","Type":"NodeParagraph","Properties":{"id":"20250305220350-trul9c0","updated":"20250305220350"},"Children":[{"Type":"NodeText","Data":"所以3的祖宗节点便成为了5"}]},{"ID":"20250305220351-lua5myc","Type":"NodeParagraph","Properties":{"id":"20250305220351-lua5myc","updated":"20250305220351"},"Children":[{"Type":"NodeText","Data":"此时以5为祖宗节点的集合为{5，3}"}]},{"ID":"20250305220351-0jrbkdo","Type":"NodeParagraph","Properties":{"id":"20250305220351-0jrbkdo","updated":"20250305220351"},"Children":[{"Type":"NodeText","Data":"如果要将p[9]=9插入到p[3]当中,应该找到3的祖宗节点,"}]},{"ID":"20250305220352-scmtdrq","Type":"NodeParagraph","Properties":{"id":"20250305220352-scmtdrq","updated":"20250305220352"},"Children":[{"Type":"NodeText","Data":"然后再把p[9]=9插入其中,所以p[9]=find(3);(find()函数用于查找祖宗节点)"}]},{"ID":"20250305220352-lhqt0q5","Type":"NodeParagraph","Properties":{"id":"20250305220352-lhqt0q5","updated":"20250305220352"},"Children":[{"Type":"NodeText","Data":"也可以是p[find(9)]=find(3),因为9的节点本身就是9"}]},{"ID":"20250305220353-4bfvibx","Type":"NodeParagraph","Properties":{"id":"20250305220353-4bfvibx","updated":"20250305220353"},"Children":[{"Type":"NodeText","Data":"此时以5为祖宗节点的集合为{5,3,9};"}]},{"ID":"20250305220353-mpl8b6n","Type":"NodeParagraph","Properties":{"id":"20250305220353-mpl8b6n","updated":"20250305220353"},"Children":[{"Type":"NodeText","Data":"如果碰到多个数的集合插入另一个集合当中其原理是相同的"}]},{"ID":"20250305220354-vzc5hgk","Type":"NodeParagraph","Properties":{"id":"20250305220354-vzc5hgk","updated":"20250305220354"},"Children":[{"Type":"NodeText","Data":"例如:"}]},{"ID":"20250305220354-kwjommw","Type":"NodeParagraph","Properties":{"id":"20250305220354-kwjommw","updated":"20250305220354"},"Children":[{"Type":"NodeText","Data":"上述中以5为祖宗节点的是p[5],p[3],p[9];(即p[5]=5,p[3]=5,p[9]=5)"}]},{"ID":"20250305220355-pbwg31s","Type":"NodeParagraph","Properties":{"id":"20250305220355-pbwg31s","updated":"20250305220355"},"Children":[{"Type":"NodeText","Data":"再构造一个以6为祖宗节点的集合为{6,4，7，10}"}]},{"ID":"20250305220356-12142rz","Type":"NodeParagraph","Properties":{"id":"20250305220356-12142rz","updated":"20250305220356"},"Children":[{"Type":"NodeText","Data":"如果要将以6为祖宗节点的集合插入到以5为祖宗节点的集合,则该操作可以是"}]},{"ID":"20250305220356-l02jw8j","Type":"NodeParagraph","Properties":{"id":"20250305220356-l02jw8j","updated":"20250305220356"},"Children":[{"Type":"NodeText","Data":"p[6]=find(3)（或者find(9),find(5)）"}]},{"ID":"20250305220357-0z7g2le","Type":"NodeParagraph","Properties":{"id":"20250305220357-0z7g2le","updated":"20250305220357"},"Children":[{"Type":"NodeText","Data":"此时p[6]=5"}]},{"ID":"20250305220358-b591ny0","Type":"NodeParagraph","Properties":{"id":"20250305220358-b591ny0","updated":"20250305220358"},"Children":[{"Type":"NodeText","Data":"当然如果是以6为祖宗节点集合中的4,7,10则可以这样"}]},{"ID":"20250305220357-ct9qya9","Type":"NodeParagraph","Properties":{"id":"20250305220357-ct9qya9","updated":"20250305220357"},"Children":[{"Type":"NodeText","Data":"p[find(4)]=find(3)"}]},{"ID":"20250305220359-2uijp4l","Type":"NodeParagraph","Properties":{"id":"20250305220359-2uijp4l","updated":"20250305220359"},"Children":[{"Type":"NodeText","Data":"或者p[find(7)]=find(3)均可以"}]},{"ID":"20250305220400-1qfbatu","Type":"NodeParagraph","Properties":{"id":"20250305220400-1qfbatu","updated":"20250305220400"},"Children":[{"Type":"NodeText","Data":"此时以6为祖宗节点的集合的祖宗节点都成为了5"}]},{"ID":"20250305223307-sxiy4rj","Type":"NodeParagraph","Properties":{"id":"20250305223307-sxiy4rj","updated":"20250305223307"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250305223307-so5yndg.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250305223119-01klkuh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250305223119-01klkuh","updated":"20250305223119"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint n,m;\nint p[N];   // 并查集数组，p[i] 表示元素 i 的父节点\nint a,b;\n\n// 并查集查找操作，带路径压缩优化\nint find(int x){\n    if(p[x] != x)   // 如果x不是该集合的代表\n        p[x] = find(p[x]);  // 查找x的祖先直到找到代表,于是顺手路径压缩\n    return p[x];    //如果x是祖先，则返回\n}\n\nint main()\n{\n    cin\u003e\u003en\u003e\u003em;\n    for(int i = 1;i\u003c=n;i++){\n        p[i] = i;\n    }\n    while(m--){\n        string op;\n        cin\u003e\u003eop\u003e\u003ea\u003e\u003eb;\n        if(op == \"M\")   p[find(a)] = find(b);   // 让 a 的根节点指向 b 的根节点，实现集合合并\n        else if(op == \"Q\"){\n            if(find(a) == find(b)){\n                cout\u003c\u003c\"Yes\"\u003c\u003cendl;\n            }else{\n                cout\u003c\u003c\"No\"\u003c\u003cendl;\n            }\n        }\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250319213725-w2tlp12","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250319213725-w2tlp12","updated":"20250320210410"},"Children":[{"Type":"NodeText","Data":"连通块中点的数量"}]},{"ID":"20250320210403-eswov90","Type":"NodeParagraph","Properties":{"id":"20250320210403-eswov90","updated":"20250320210403"},"Children":[{"Type":"NodeText","Data":"给定一个包含 n 个点（编号为 1∼n）的无向图，初始时图中没有边。"}]},{"ID":"20250320210403-suzkk1j","Type":"NodeParagraph","Properties":{"id":"20250320210403-suzkk1j","updated":"20250320210403"},"Children":[{"Type":"NodeText","Data":"现在要进行 m 个操作，操作共有三种："}]},{"ID":"20250320210403-tr8ws55","Type":"NodeParagraph","Properties":{"id":"20250320210403-tr8ws55","updated":"20250320210407"},"Children":[{"Type":"NodeText","Data":"C a b，在点 a 和点 b 之间连一条边，a 和 b 可能相等；\nQ1 a b，询问点 a 和点 b 是否在同一个连通块中，a 和 b 可能相等；\nQ2 a，询问点 a 所在连通块中点的数量；\n"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输入格式"},{"Type":"NodeText","Data":"\n第一行输入整数 n 和 m。"}]},{"ID":"20250320210403-i2j8wxi","Type":"NodeParagraph","Properties":{"id":"20250320210403-i2j8wxi","updated":"20250320210403"},"Children":[{"Type":"NodeText","Data":"接下来 m 行，每行包含一个操作指令，指令为 C a b，Q1 a b 或 Q2 a 中的一种。"}]},{"ID":"20250320210403-7ft2sxy","Type":"NodeParagraph","Properties":{"id":"20250320210403-7ft2sxy","updated":"20250320210409"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输出格式"},{"Type":"NodeText","Data":"\n对于每个询问指令 Q1 a b，如果 a 和 b 在同一个连通块中，则输出 Yes，否则输出 No。"}]},{"ID":"20250320210403-yjun49m","Type":"NodeParagraph","Properties":{"id":"20250320210403-yjun49m","updated":"20250320210403"},"Children":[{"Type":"NodeText","Data":"对于每个询问指令 Q2 a，输出一个整数表示点 a 所在连通块中点的数量"}]},{"ID":"20250320210403-m59wgdb","Type":"NodeParagraph","Properties":{"id":"20250320210403-m59wgdb","updated":"20250320210403"},"Children":[{"Type":"NodeText","Data":"每个结果占一行。"}]},{"ID":"20250320210403-wigcxt7","Type":"NodeParagraph","Properties":{"id":"20250320210403-wigcxt7","updated":"20250320210410"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据范围"},{"Type":"NodeText","Data":"\n1≤n,m≤105"}]},{"ID":"20250319213808-ilopk3a","Type":"NodeParagraph","Properties":{"id":"20250319213808-ilopk3a","updated":"20250320205852"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输入样例："}]},{"ID":"20250319213808-8yfgy6n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250319213808-8yfgy6n","updated":"20250319213808"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aGxqcw=="},{"Type":"NodeCodeBlockCode","Data":"5 5\nC 1 2\nQ1 1 2\nQ2 1\nC 2 5\nQ2 5\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250319213808-z131zt7","Type":"NodeParagraph","Properties":{"id":"20250319213808-z131zt7","updated":"20250320205858"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输出样例："}]},{"ID":"20250319213808-p59uhua","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250319213808-p59uhua","updated":"20250319213808"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker"},{"Type":"NodeCodeBlockCode","Data":"Yes\n2\n3\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250320205907-elf9s93","Type":"NodeParagraph","Properties":{"id":"20250320205907-elf9s93","updated":"20250320205922"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"代码模板："}]},{"ID":"20250319213815-vnc0ehb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250319213815-vnc0ehb","updated":"20250319213822"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint p[N];    // 并查集父节点数组\nint Size[N];  // 存储每个连通块的大小\nint n, m;\n\n// 查找根节点并进行路径压缩\nint find(int x) {\n    if (p[x] != x) p[x] = find(p[x]);\n    return p[x];\n}\n\nint main() {\n    cin \u003e\u003e n \u003e\u003e m;\n    // 初始化并查集，每个节点的父节点是自己，大小为1\n    for (int i = 1; i \u003c= n; ++i) {\n        p[i] = i;\n        Size[i] = 1;\n    }\n\n    while (m--) {\n        string op;\n        cin \u003e\u003e op;\n        \n        if (op == \"C\") {\n            int a, b;\n            cin \u003e\u003e a \u003e\u003e b;\n            int rootA = find(a);\n            int rootB = find(b);\n            if (rootA != rootB) {\n                p[rootA] = rootB;          // 将rootA合并到rootB\n                Size[rootB] += Size[rootA]; // 更新rootB的大小\n            }\n        } else if (op == \"Q1\") {\n            int a, b;\n            cin \u003e\u003e a \u003e\u003e b;\n            if (find(a) == find(b)) {\n                cout \u003c\u003c \"Yes\\n\";\n            } else {\n                cout \u003c\u003c \"No\\n\";\n            }\n        } else if (op == \"Q2\") {\n            int a;\n            cin \u003e\u003e a;\n            cout \u003c\u003c Size[find(a)] \u003c\u003c \"\\n\";\n        }\n    }\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250320205934-o3owcha","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250320205934-o3owcha","updated":"20250320212857"},"Children":[{"Type":"NodeText","Data":"食物链"}]},{"ID":"20250320210433-8v7tspo","Type":"NodeParagraph","Properties":{"id":"20250320210433-8v7tspo","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"动物王国中有三类动物 A,B,C，这三类动物的食物链构成了有趣的环形。"}]},{"ID":"20250320210433-sz0zkg7","Type":"NodeParagraph","Properties":{"id":"20250320210433-sz0zkg7","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"A 吃 B，B 吃 C，C 吃 A。"}]},{"ID":"20250320210433-e7q2r1m","Type":"NodeParagraph","Properties":{"id":"20250320210433-e7q2r1m","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"现有 N 个动物，以 1∼N 编号。"}]},{"ID":"20250320210433-fx8lsts","Type":"NodeParagraph","Properties":{"id":"20250320210433-fx8lsts","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"每个动物都是 A,B,C 中的一种，但是我们并不知道它到底是哪一种。"}]},{"ID":"20250320210433-dwxgbvn","Type":"NodeParagraph","Properties":{"id":"20250320210433-dwxgbvn","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"有人用两种说法对这 N 个动物所构成的食物链关系进行描述："}]},{"ID":"20250320210433-p8zveuq","Type":"NodeParagraph","Properties":{"id":"20250320210433-p8zveuq","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"第一种说法是 1 X Y，表示 X 和 Y 是同类。"}]},{"ID":"20250320210433-v8lfl67","Type":"NodeParagraph","Properties":{"id":"20250320210433-v8lfl67","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"第二种说法是 2 X Y，表示 X 吃 Y。"}]},{"ID":"20250320210433-s5irgxn","Type":"NodeParagraph","Properties":{"id":"20250320210433-s5irgxn","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"此人对 N 个动物，用上述两种说法，一句接一句地说出 K 句话，这 K 句话有的是真的，有的是假的。"}]},{"ID":"20250320210433-zdllg7r","Type":"NodeParagraph","Properties":{"id":"20250320210433-zdllg7r","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"当一句话满足下列三条之一时，这句话就是假话，否则就是真话。"}]},{"ID":"20250320210433-v82srzz","Type":"NodeParagraph","Properties":{"id":"20250320210433-v82srzz","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"当前的话与前面的某些真的话冲突，就是假话；\n当前的话中 X 或 Y 比 N 大，就是假话；\n当前的话表示 X 吃 X，就是假话。\n你的任务是根据给定的 N 和 K 句话，输出假话的总数。"}]},{"ID":"20250320210433-vp04vs2","Type":"NodeParagraph","Properties":{"id":"20250320210433-vp04vs2","updated":"20250320210436"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输入格式"},{"Type":"NodeText","Data":"\n第一行是两个整数 N 和 K，以一个空格分隔。"}]},{"ID":"20250320210433-ux3cytz","Type":"NodeParagraph","Properties":{"id":"20250320210433-ux3cytz","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"以下 K 行每行是三个正整数 D，X，Y，两数之间用一个空格隔开，其中 D 表示说法的种类。"}]},{"ID":"20250320210433-zt6kexb","Type":"NodeParagraph","Properties":{"id":"20250320210433-zt6kexb","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"若 D=1，则表示 X 和 Y 是同类。"}]},{"ID":"20250320210433-m415l2z","Type":"NodeParagraph","Properties":{"id":"20250320210433-m415l2z","updated":"20250320210433"},"Children":[{"Type":"NodeText","Data":"若 D=2，则表示 X 吃 Y。"}]},{"ID":"20250320210433-fk9k020","Type":"NodeParagraph","Properties":{"id":"20250320210433-fk9k020","updated":"20250320210438"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输出格式"},{"Type":"NodeText","Data":"\n只有一个整数，表示假话的数目。"}]},{"ID":"20250320210447-6wrlo4n","Type":"NodeParagraph","Properties":{"id":"20250320210447-6wrlo4n","updated":"20250320210453"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据范围"},{"Type":"NodeText","Data":"\n1≤N≤50000,\n0≤K≤100000"}]},{"ID":"20250320210459-qy6njr0","Type":"NodeParagraph","Properties":{"id":"20250320210459-qy6njr0","updated":"20250320210503"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输入样例："}]},{"ID":"20250320210459-50njovg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250320210459-50njovg","updated":"20250320210459"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aGxqcw=="},{"Type":"NodeCodeBlockCode","Data":"100 7\n1 101 1 \n2 1 2\n2 2 3 \n2 3 3 \n1 1 3 \n2 3 1 \n1 5 5\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250320210459-j06qzf6","Type":"NodeParagraph","Properties":{"id":"20250320210459-j06qzf6","updated":"20250320210508"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输出样例："}]},{"ID":"20250320210459-0lu77rv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250320210459-0lu77rv","updated":"20250320210459"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aGxqcw=="},{"Type":"NodeCodeBlockCode","Data":"3\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250320210516-75doza3","Type":"NodeParagraph","Properties":{"id":"20250320210516-75doza3","updated":"20250320210522"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"代码模板："}]},{"ID":"20250320212857-pvota4d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250320212857-pvota4d","updated":"20250320212857"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n\nconst int N = 50010;  \nint parent[N];        // 并查集的父节点数组\nint dist[N];          // 节点到父节点的距离（用于模3判断关系）\n\n// 查找根节点，并实现路径压缩\nint find(int x) {\n    if (parent[x] != x) {                // 如果当前节点不是根节点\n        int orig = parent[x];            // 记录原始父节点\n        parent[x] = find(parent[x]);     // 递归查找根节点，路径压缩\n        dist[x] += dist[orig];           // 更新当前节点到根节点的距离\n    }\n    return parent[x];                    // 返回根节点\n}\n\n//         ————————-\n//         ↓       ↑\n// E → D → C → B → A\n// 如果一个点到根节点的距离是1，如B到A，说明A吃B；\n// 如果一个点到根节点的距离是2，如C到A，说明B吃C，且C吃A；\n// 如果一个点到根节点的距离是3，如D到A，说明D与A是同类\n// 说明每三个距离为一个循环，相当于...B → A → C → B → A\nint main() {\n    int n, k;\n    cin \u003e\u003e n \u003e\u003e k;\n\n    // 初始化并查集，每个节点的父节点是自己，距离初始化为0\n    for (int i = 1; i \u003c= n; ++i) {\n        parent[i] = i;\n        dist[i] = 0;\n    }\n\n    int cnt = 0;  // 错误计数器\n\n    while (k--) {\n        int D, x, y;\n        cin \u003e\u003e D \u003e\u003e x \u003e\u003e y;\n\n        // 规则1：动物编号超过N是错误\n        if (x \u003e n || y \u003e n) {\n            cnt++;\n            continue;\n        }\n\n        // 规则2：D=2时，X吃X自己是错误\n        if (D == 2 \u0026\u0026 x == y) {\n            cnt++;\n            continue;\n        }\n\n        int rx = find(x);  // 找x的根\n        int ry = find(y);  // 找y的根\n\n        if (rx != ry) {\n            // 合并两个集合\n            parent[rx] = ry;  // 将rx的父节点设为ry\n\n            // 根据关系类型调整距离\n            if (D == 1) {  // 同类关系\n                // 保持 (dist[x] + dist[rx]) ≡ dist[y] (mod 3)\n                dist[rx] = (dist[y] - dist[x] + 3) % 3;\n            } else {        // 捕食关系（x吃y）\n                // 保持 (dist[x] + dist[rx]) ≡ dist[y] + 1 (mod 3)\n                dist[rx] = (dist[y] - dist[x] + 1 + 3) % 3;\n            }\n        } else {\n            // 已存在关系，验证当前声明是否矛盾\n            if (D == 1) {  // 声明同类\n                // 距离差应为0的模3等价类\n                int mod = (dist[x] - dist[y]) % 3;\n                if (mod \u003c 0) mod += 3;  // 处理负数\n                if (mod != 0) cnt++;\n            } else {        // 声明x吃y\n                // 距离差应为1的模3等价类\n                int mod = (dist[x] - dist[y]) % 3;\n                if (mod \u003c 0) mod += 3;\n                if (mod != 1) cnt++;\n            }\n        }\n    }\n\n    cout \u003c\u003c cnt \u003c\u003c endl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250313215338-2rzot0o","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250313215338-2rzot0o","updated":"20250313225953"},"Children":[{"Type":"NodeText","Data":"二分答案法"}]},{"ID":"20250313215351-3p6d54b","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250313215351-3p6d54b","updated":"20250313225953"},"Children":[{"Type":"NodeText","Data":"爱吃香蕉的珂珂"}]},{"ID":"20250313215414-7zve9ek","Type":"NodeBlockquote","Properties":{"id":"20250313215414-7zve9ek","updated":"20250313215437"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20250313215419-jfd5428","Type":"NodeParagraph","Properties":{"id":"20250313215419-jfd5428","updated":"20250313215437"},"Children":[{"Type":"NodeText","Data":"珂珂喜欢吃香蕉。这里有 n 堆香蕉，第 i 堆中有 piles[i] 根香蕉\n警卫已经离开了，将在 h 小时后回来。\n珂珂可以决定她吃香蕉的速度 k （单位：根/小时)\n每个小时，她将会选择一堆香蕉，从中吃掉 k 根\n如果这堆香蕉少于 k 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉\n珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉。\n返回她可以在 h 小时内吃掉所有香蕉的最小速度 k（k 为整数）"}]}]},{"ID":"20250313215345-0pu2tk4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250313215345-0pu2tk4","updated":"20250313215413"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 1e5+10;\nint piles[N];\nint n,h;\n\nint bsearch(int n,int h){\n    int sum = 0,max_pile = 0;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003epiles[i];      //输入n 堆香蕉，第 i 堆中有 piles[i] 根香蕉\n        sum += piles[i];    //香蕉总根数 sum\n        max_pile = max(max_pile, piles[i]); // 找到最大的香蕉堆max_pile，最快不是一次吃的根数为香蕉总和，而是一次吃最多香蕉的那堆的数量，因为如果是max_pile根每小时，那么每一堆吃的时长就已经是1小时一堆了\n    }\n    int l = 1,r = max_pile;  //最少1根每小时，最多max_pile根每小时\n  \n    while(l\u003cr){\n        int m = (l+r)/2;    //二分，每小时吃m根\n        int num = 0;    //记录吃完要用多少小时\n\n        for (int i = 0; i \u003c n; i++) {\n            num += (piles[i] + m - 1) / m; // 计算每堆需要多少小时，(a/b)结果向上取整，如果a和b都是非负数，可以写成(a+b-1)/b\n        }\n\n        if(num \u003e h){    //吃完要用的时间大于了规定的时间h，在右边调递归\n            l = m+1;\n        }else{  //吃完要用的时间小于了规定的时间h，在左边调递归\n            r = m;\n        }\n    }\n    return l;   //l和r都行，最后总是l=r\n}\n\nint main()\n{\n    cin\u003e\u003en\u003e\u003eh;\n    cout\u003c\u003cbsearch(n,h)\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250313225944-7ozh6tx","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250313225944-7ozh6tx","updated":"20250322135633"},"Children":[{"Type":"NodeText","Data":"分割数组的最大值(画匠问题)"}]},{"ID":"20250313230944-fgbai9y","Type":"NodeParagraph","Properties":{"id":"20250313230944-fgbai9y","updated":"20250313230944"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"无标题"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/无标题-20250313230944-nd0idjb.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250313225934-j2379ts","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250313225934-j2379ts","updated":"20250313225958"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"// 给定一个非负整数数组 nums 和一个整数 m\n// 你需要将这个数组分成 m 个非空的连续子数组。\n// 设计一个算法使得这 m 个子数组各自和的最大值最小。\n// 示例 1：\n// 输入：nums = [7,2,5,10,8], k = 2\n// 输出：18\n// 示例 2：\n// 输入：nums = [1,2,3,4,5], k = 2\n// 输出：9\n// 示例 3：\n// 输入：nums = [1,4,4], k = 3\n// 输出：4\n\n#include\u003cbits/stdc++.h\u003e\nusing namespace std;\nconst int N = 1e5+10;\nint nums[N];\nint n,m;\n\nint f(int mid){\n    int q = 0,k = 0;\n    for(int i = 0;i\u003cn;i++){\n        if(k+nums[i]\u003c=mid){\n            k += nums[i];\n        }else{\n            k = nums[i];\n            q++;\n        }\n    }\n    q++;\n    return q;\n}\n\nint bsearch(int n,int m){\n    int sum = 0,maxnum = 0;\n    for(int i = 0;i\u003cn;i++){\n        cin\u003e\u003enums[i];\n        sum += nums[i];\n        maxnum = max(maxnum,nums[i]);\n    }\n\n    int l = maxnum,r = sum;\n    while(l\u003cr){\n        int mid = (l+r)/2;\n        if(f(mid)\u003em)    l = mid+1;\n        else    r = mid;\n    }\n    return l;\n}\n\nint main()\n{\n    cin\u003e\u003en\u003e\u003em;\n    cout\u003c\u003cbsearch(n,m)\u003c\u003cendl;\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250322135631-nsc7u1w","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250322135631-nsc7u1w","updated":"20250322135821"},"Children":[{"Type":"NodeText","Data":"数据结构"}]},{"ID":"20250322135635-lynkn5b","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250322135635-lynkn5b","updated":"20250322135821"},"Children":[{"Type":"NodeText","Data":"树"}]},{"ID":"20250322135722-wruw6r8","Type":"NodeParagraph","Properties":{"id":"20250322135722-wruw6r8","updated":"20250322135820"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"DFS"},{"Type":"NodeText","Data":"：在二叉树中相当于前序、中序、后序遍历中的一种"}]},{"ID":"20250322135809-qeei068","Type":"NodeParagraph","Properties":{"id":"20250322135809-qeei068","updated":"20250322135821"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"BFS"},{"Type":"NodeText","Data":"：在二叉树中相当于层序遍历"}]},{"ID":"20250322101816-ezjoifk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250322101816-ezjoifk","updated":"20250322135401"},"Children":[{"Type":"NodeText","Data":"DFS递归"}]},{"ID":"20250322135355-osk2j6e","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250322135355-osk2j6e","updated":"20250322135401"},"Children":[{"Type":"NodeText","Data":"排列数字"}]},{"ID":"20250322135234-la9rh0z","Type":"NodeParagraph","Properties":{"id":"20250322135234-la9rh0z","updated":"20250322135234"},"Children":[{"Type":"NodeText","Data":"给定一个整数 n，将数字 1∼n 排成一排，将会有很多种排列方法。"}]},{"ID":"20250322135234-o3d1nxl","Type":"NodeParagraph","Properties":{"id":"20250322135234-o3d1nxl","updated":"20250322135234"},"Children":[{"Type":"NodeText","Data":"现在，请你按照字典序将所有的排列方法输出。"}]},{"ID":"20250322135234-49hxip8","Type":"NodeParagraph","Properties":{"id":"20250322135234-49hxip8","updated":"20250322135259"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输入格式"},{"Type":"NodeText","Data":"\n共一行，包含一个整数 n。"}]},{"ID":"20250322135234-6zs7ku7","Type":"NodeParagraph","Properties":{"id":"20250322135234-6zs7ku7","updated":"20250322135258"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输出格式"},{"Type":"NodeText","Data":"\n按字典序输出所有排列方案，每个方案占一行。"}]},{"ID":"20250322135234-bue5vss","Type":"NodeParagraph","Properties":{"id":"20250322135234-bue5vss","updated":"20250322135257"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据范围"},{"Type":"NodeText","Data":"\n1≤n≤7"}]},{"ID":"20250322135240-y853rww","Type":"NodeParagraph","Properties":{"id":"20250322135240-y853rww","updated":"20250322135256"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输入样例："}]},{"ID":"20250322135240-bdw3s3u","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250322135240-bdw3s3u","updated":"20250322135240"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aGxqcw=="},{"Type":"NodeCodeBlockCode","Data":"3\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250322135240-bclyt1f","Type":"NodeParagraph","Properties":{"id":"20250322135240-bclyt1f","updated":"20250322135255"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"输出样例："}]},{"ID":"20250322135240-tid3ada","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250322135240-tid3ada","updated":"20250322135240"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aGxqcw=="},{"Type":"NodeCodeBlockCode","Data":"1 2 3\n1 3 2\n2 1 3\n2 3 1\n3 1 2\n3 2 1\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250322135339-ci0mdg0","Type":"NodeParagraph","Properties":{"id":"20250322135339-ci0mdg0","updated":"20250322135339"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250322135339-a4sw98m.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20250322135347-mr3x7eg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250322135347-mr3x7eg","updated":"20250322135347"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nconst int N = 10;\nint n;\nint path[N];\nbool st[N]; //判断是否重复\n\nvoid dfs(int a){\n    if(a == n){ //a是path的下标，到a=n时恰好遍历完n-1\n        for(int i = 0;i\u003cn;i++){\n            cout\u003c\u003cpath[i]\u003c\u003c\" \";\n        }\n        cout\u003c\u003cendl;\n        return;\n    }\n    for(int i = 1;i\u003c=n;i++){\n        if(!st[i]){\n            path[a] = i;    //从1开始\n            st[i] = true;\n            dfs(a+1);\n            st[i] = false;  //回溯\n        }\n    }\n}\n\nint main()\n{\n    cin\u003e\u003en;\n    dfs(0);\n    return 0;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250306081654-v9jtgip","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250306081654-v9jtgip","updated":"20250322135308"},"Children":[{"Type":"NodeText","Data":"其他常用方法"}]},{"ID":"20250306081704-fvprkm3","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250306081704-fvprkm3","updated":"20250306081720"},"Children":[{"Type":"NodeText","Data":"加减交替"}]},{"ID":"20250306081710-wwdbf7i","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250306081710-wwdbf7i","updated":"20250306081710"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"int flag=1;\nfor(…………)\n｛ \n sum+=b*flag;\nflag=-flag；\n ｝\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250306081720-4j03qy7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250306081720-4j03qy7","updated":"20250306081909"},"Children":[{"Type":"NodeText","Data":"判断质数"}]},{"ID":"20250306081822-sw6wj0t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250306081822-sw6wj0t","updated":"20250306081909"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":" for(int i = 2; i \u003c= sqrt(m); i++) {\t//for外结算：如果flag为1，则m是质数\n        if (m % i == 0) {\n            flag = 0;\n            break; // 发现m不是质数，立即退出循环\n        }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250305223310-t70j2h8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250305223310-t70j2h8","updated":"20250306081349"},"Children":[{"Type":"NodeText","Data":"其他注意事项"}]},{"ID":"20250306081159-50wy1d2","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250306081159-50wy1d2","updated":"20250306081349"},"Children":[{"Type":"NodeText","Data":"输入输出问题"}]},{"ID":"20250306081145-oz319ng","Type":"NodeBlockquote","Properties":{"id":"20250306081145-oz319ng","updated":"20250306081152"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20250306081152-gmiqz3c","Type":"NodeParagraph","Properties":{"id":"20250306081152-gmiqz3c","updated":"20250306081152"},"Children":[{"Type":"NodeText","Data":"cin cout和printf和scanf的取舍问题："}]},{"ID":"20250306081152-ydmaovl","Type":"NodeParagraph","Properties":{"id":"20250306081152-ydmaovl","updated":"20250306081152"},"Children":[{"Type":"NodeText","Data":"一般情况下用cin cout，除非："}]},{"ID":"20250306081152-gxu654j","Type":"NodeParagraph","Properties":{"id":"20250306081152-gxu654j","updated":"20250306081152"},"Children":[{"Type":"NodeText","Data":"超时和对输出格式有特殊要求"}]},{"ID":"20250306081152-f4m3cm7","Type":"NodeParagraph","Properties":{"id":"20250306081152-f4m3cm7","updated":"20250306081152"},"Children":[{"Type":"NodeText","Data":"一般输入数据量大于1e6时，就用scanf和printf"}]}]},{"ID":"20250306081341-x3g92vv","Type":"NodeBlockquote","Properties":{"id":"20250306081341-x3g92vv","updated":"20250306081349"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20250306081346-n89vs57","Type":"NodeParagraph","Properties":{"id":"20250306081346-n89vs57","updated":"20250306081346"},"Children":[{"Type":"NodeText","Data":"cout在打印浮点数时，自动忽略小数点后多余的0；"}]},{"ID":"20250306081349-lsy9pl5","Type":"NodeParagraph","Properties":{"id":"20250306081349-lsy9pl5","updated":"20250306081349"},"Children":[{"Type":"NodeText","Data":"printf在打印浮点数时，小数点默认打印6位"}]}]},{"ID":"20250306081155-av1stg4","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250306081155-av1stg4","updated":"20250306081651"},"Children":[{"Type":"NodeText","Data":"continue问题"}]},{"ID":"20250306081216-rk5rvmp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250306081216-rk5rvmp","updated":"20250306081236"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Y3Bw"},{"Type":"NodeCodeBlockCode","Data":"// continue易忘点：\nfor(int i = 0; i\u003c10;i++)\t//continue跳过不了i++\n{ \nif(i = 5)\ncontinue;\n }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250306081632-hqd3xli","Type":"NodeParagraph","Properties":{"id":"20250306081632-hqd3xli","updated":"20250306081632"}}]}